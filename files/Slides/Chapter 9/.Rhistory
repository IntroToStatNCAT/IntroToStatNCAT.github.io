p2 = exp(p[26])/(1 + exp(p[26]))
p3 = exp(p[51])/(1 + exp(p[51]))
points(x = c(0,25,50), y = c(p1,p2,p3), col = COL[4], pch = 19, cex = 2)
legend("topright",c("Male","Female"),pch=c(15,17), col = c(COL[1,2], COL[2,2]), cex = 2, inset = 0.025)
g=glm(Status~Age+Sex, data=donner, family=binomial)
summary(g)
par(mar=c(2,4,2,1), las=1, mgp=c(3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)
plot(donner$Age,as.numeric(donner$Status)-1+0.01*((as.numeric(donner$Sex)-1)*2-1),xlab="Age",ylab="Status",xlim=c(0,80),pch=c(15,17)[donner$Sex], col = c(COL[1,2], COL[2,2]))
x=0:80
p_male = predict(g,newdata=data.frame(Age=x,Sex="Male"))
p_female = predict(g,newdata=data.frame(Age=x,Sex="Female"))
lines(x,exp(p_male)/(1+exp(p_male)), col = COL[1], lwd = 2)
lines(x,exp(p_female)/(1+exp(p_female)), col = COL[2], lwd = 2, lty = 2)
legend("topright",c("Male","Female"),pch=c(15,17), col = c(COL[1,2], COL[2,2]), inset = 0.025)
text(x = 45, y = 0.7, "Female", col = COL[2], cex = 1.5)
text(x = 20, y = 0.3, "Male", col = COL[1], cex = 1.5)
par(mar=c(2,4,2,1), las=1, mgp=c(3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)
plot(donner$Age,as.numeric(donner$Status)-1+0.01*((as.numeric(donner$Sex)-1)*2-1),xlab="Age",ylab="Status",xlim=c(0,80),pch=c(15,17)[donner$Sex], col = c(COL[1,2], COL[2,2]), cex = 2)
x=0:80
p_male = predict(g,newdata=data.frame(Age=x,Sex="Male"))
p_female = predict(g,newdata=data.frame(Age=x,Sex="Female"))
lines(x,exp(p_male)/(1+exp(p_male)), col = COL[1], lwd = 2)
lines(x,exp(p_female)/(1+exp(p_female)), col = COL[2], lwd = 2, lty = 2)
legend("topright",c("Male","Female"),pch=c(15,17), col = c(COL[1,2], COL[2,2]), inset = 0.025, cex = 2)
text(x = 45, y = 0.7, "Female", col = COL[2], cex = 2)
text(x = 20, y = 0.3, "Male", col = COL[1], cex = 2)
par(mar=c(2,4,2,1), las=1, mgp=c(3,0.7,0), cex.lab = 1.5, cex.axis = 1.25)
plot(donner$Age,as.numeric(donner$Status)-1+0.01*((as.numeric(donner$Sex)-1)*2-1),xlab="Age",ylab="Status",xlim=c(0,80),pch=c(15,17)[donner$Sex], col = c(COL[1,2], COL[2,2]), cex = 2)
x=0:80
p_male = predict(g,newdata=data.frame(Age=x,Sex="Male"))
p_female = predict(g,newdata=data.frame(Age=x,Sex="Female"))
lines(x,exp(p_male)/(1+exp(p_male)), col = COL[1], lwd = 4)
lines(x,exp(p_female)/(1+exp(p_female)), col = COL[2], lwd = 2, lty = 4)
legend("topright",c("Male","Female"),pch=c(15,17), col = c(COL[1,2], COL[2,2]), inset = 0.025, cex = 2)
text(x = 45, y = 0.7, "Female", col = COL[2], cex = 2)
text(x = 20, y = 0.3, "Male", col = COL[1], cex = 2)
birds = case2002
birds$pch = NA
birds$pch[birds$LC == "LungCancer" & birds$BK == "Bird"] = 17
birds$pch[birds$LC == "LungCancer" & birds$BK == "NoBird"] = 16
birds$pch[birds$LC == "NoCancer" & birds$BK == "Bird"] = 2
birds$pch[birds$LC == "NoCancer" & birds$BK == "NoBird"] = 1
birds$col[birds$LC == "LungCancer"] = COL[2,2]
birds$col[birds$LC == "NoCancer"] = COL[1,2]
# birds
par(mar=c(2,4,2,1), las=1, mgp=c(3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)
plot(YR~AG, data = birds, pch = birds$pch, col = birds$col, lwd = 2)
birds = case2002
birds$pch = NA
birds$pch[birds$LC == "LungCancer" & birds$BK == "Bird"] = 17
birds$pch[birds$LC == "LungCancer" & birds$BK == "NoBird"] = 16
birds$pch[birds$LC == "NoCancer" & birds$BK == "Bird"] = 2
birds$pch[birds$LC == "NoCancer" & birds$BK == "NoBird"] = 1
birds$col[birds$LC == "LungCancer"] = COL[2,2]
birds$col[birds$LC == "NoCancer"] = COL[1,2]
# birds
par(mar=c(2,4,2,1), las=1, mgp=c(3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)
plot(YR~AG, data = birds, pch = birds$pch, col = birds$col, lwd = 5)
birds = case2002
birds$pch = NA
birds$pch[birds$LC == "LungCancer" & birds$BK == "Bird"] = 17
birds$pch[birds$LC == "LungCancer" & birds$BK == "NoBird"] = 16
birds$pch[birds$LC == "NoCancer" & birds$BK == "Bird"] = 2
birds$pch[birds$LC == "NoCancer" & birds$BK == "NoBird"] = 1
birds$col[birds$LC == "LungCancer"] = COL[2,2]
birds$col[birds$LC == "NoCancer"] = COL[1,2]
# birds
par(mar=c(2,4,2,1), las=1, mgp=c(3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)
plot(YR~AG, data = birds, pch = birds$pch, col = birds$col, lwd = 2)
birds = case2002
birds$pch = NA
birds$pch[birds$LC == "LungCancer" & birds$BK == "Bird"] = 17
birds$pch[birds$LC == "LungCancer" & birds$BK == "NoBird"] = 16
birds$pch[birds$LC == "NoCancer" & birds$BK == "Bird"] = 2
birds$pch[birds$LC == "NoCancer" & birds$BK == "NoBird"] = 1
birds$col[birds$LC == "LungCancer"] = COL[2,2]
birds$col[birds$LC == "NoCancer"] = COL[1,2]
# birds
par(mar=c(2,4,2,1), las=1, mgp=c(3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)
plot(YR~AG, data = birds, pch = birds$pch, col = birds$col, lwd = 2, cex = 2)
birds = case2002
birds$pch = NA
birds$pch[birds$LC == "LungCancer" & birds$BK == "Bird"] = 17
birds$pch[birds$LC == "LungCancer" & birds$BK == "NoBird"] = 16
birds$pch[birds$LC == "NoCancer" & birds$BK == "Bird"] = 2
birds$pch[birds$LC == "NoCancer" & birds$BK == "NoBird"] = 1
birds$col[birds$LC == "LungCancer"] = COL[2,2]
birds$col[birds$LC == "NoCancer"] = COL[1,2]
# birds
par(mar=c(2,4,2,1), las=1, mgp=c(3,0.7,0), cex.lab = 1.5, cex.axis = 1.25)
plot(YR~AG, data = birds, pch = birds$pch, col = birds$col, lwd = 2, cex = 2)
data(email)
email$cc       = as.factor(ifelse(email$cc > 0, "yes", "no"))
email$attach   = as.factor(ifelse(email$attach > 0, "yes", "no"))
email$dollar   = as.factor(ifelse(email$dollar > 0, "yes", "no"))
email$inherit  = as.factor(ifelse(email$inherit > 0, "yes", "no"))
email$password = as.factor(ifelse(email$password > 0, "yes", "no"))
email$format       = as.factor(ifelse(email$format, "HTML", "Plain"))
email$sent_email   = as.factor(ifelse(email$sent_email, "yes", "no"))
email$image        = as.factor(ifelse(email$image, "yes", "no"))
email$from         = as.factor(ifelse(email$from, "yes", "no"))
email$to_multiple  = as.factor(ifelse(email$to_multiple, "yes", "no"))
email$re_subj      = as.factor(ifelse(email$re_subj, "yes", "no"))
email$exclaim_subj = as.factor(ifelse(email$exclaim_subj, "yes", "no"))
email$urgent_subj  = as.factor(ifelse(email$urgent_subj, "yes", "no"))
email$time = NULL
email$viagra = NULL
g_full = glm(spam ~ ., data=email, family=binomial)
summary(g_full)
knitr::opts_chunk$set(echo = FALSE)
library(readr)
library(openintro)
library(here)
library(tidyverse)
library(xtable)
library(broom)
library(DAAG)
library(Sleuth3)
data(allbacks)
data(COL)
data(email)
email$cc       = as.factor(ifelse(email$cc > 0, "yes", "no"))
email$attach   = as.factor(ifelse(email$attach > 0, "yes", "no"))
email$dollar   = as.factor(ifelse(email$dollar > 0, "yes", "no"))
email$inherit  = as.factor(ifelse(email$inherit > 0, "yes", "no"))
email$password = as.factor(ifelse(email$password > 0, "yes", "no"))
email$format       = as.factor(ifelse(email$format, "HTML", "Plain"))
email$sent_email   = as.factor(ifelse(email$sent_email, "yes", "no"))
email$image        = as.factor(ifelse(email$image, "yes", "no"))
email$from         = as.factor(ifelse(email$from, "yes", "no"))
email$to_multiple  = as.factor(ifelse(email$to_multiple, "yes", "no"))
email$re_subj      = as.factor(ifelse(email$re_subj, "yes", "no"))
email$exclaim_subj = as.factor(ifelse(email$exclaim_subj, "yes", "no"))
email$urgent_subj  = as.factor(ifelse(email$urgent_subj, "yes", "no"))
email$time = NULL
email$viagra = NULL
g_full = glm(spam ~ ., data=email, family=binomial)
summary(g_full)
summary(glm(LC Ëœ FM + SS + BK + AG + YR + CD, data=bird, family=binomial))
summary(glm(LC ~ FM + SS + BK + AG + YR + CD, data=bird, family=binomial))
summary(glm(LC ~ FM + SS + BK + AG + YR + CD, data=birds, family=binomial))
# odds ratios
p = (1:99)/100
f = function(p) (3.91 * p/(1-p))/(1+3.91 * p/(1-p))
par(mar=c(5, 4, 2, 2) + 0.1)
plot(p,f(p),xlab="P(lung cancer | no birds)",ylab="P(lung cancer | birds)",type="l")
abline(a=0,b=1,col='lightgrey')
# odds ratios
p = (1:99)/100
f = function(p) (3.91 * p/(1-p))/(1+3.91 * p/(1-p))
par(mar=c(5, 4, 2, 2) + 0.1)
plot(p,f(p),xlab="P(lung cancer | no birds)",ylab="P(lung cancer | birds)",type="l", cex.axis = 2, cex.lab = 2)
abline(a=0,b=1,col='lightgrey', lwd = 4)
# odds ratios
p = (1:99)/100
f = function(p) (3.91 * p/(1-p))/(1+3.91 * p/(1-p))
par(mar=c(5, 4, 2, 2) + 0.1)
plot(p,f(p),xlab="P(lung cancer | no birds)",ylab="P(lung cancer | birds)",type="l", cex.axis = 1.5, cex.lab = 1.5, cex = 2)
abline(a=0,b=1,col='lightgrey', lwd = 4)
# odds ratios
p = (1:99)/100
f = function(p) (3.91 * p/(1-p))/(1+3.91 * p/(1-p))
par(mar=c(5, 4, 2, 2) + 0.1)
plot(p,f(p),xlab="P(lung cancer | no birds)",ylab="P(lung cancer | birds)",type="l", cex.axis = 1.5, cex.lab = 1.5, cex = 4)
abline(a=0,b=1,col='lightgrey', lwd = 4)
# odds ratios
p = (1:99)/100
f = function(p) (3.91 * p/(1-p))/(1+3.91 * p/(1-p))
par(mar=c(5, 4, 2, 2) + 0.1)
plot(p,f(p),xlab="P(lung cancer | no birds)",ylab="P(lung cancer | birds)",type="l", cex.axis = 1.5, cex.lab = 1.5, lwd = 4)
abline(a=0,b=1,col='lightgrey', lwd = 4)
# odds ratios
par(mar=c(5, 4, 2, 2) + 0.1)
plot(p,f(p),xlab="P(lung cancer | no birds)",ylab="P(lung cancer | birds)",type="l", cex.axis = 1.5, cex.lab = 1.5, lwd = 4)
abline(a=0,b=1,col='lightgrey', lwd = 4)
points(0.05,f(0.05),col='red',pch=16)
lines(c(0.05,0.05),c(0,f(0.05)),col='red')
# odds ratios
par(mar=c(5, 4, 2, 2) + 0.1)
plot(p,f(p),xlab="P(lung cancer | no birds)",ylab="P(lung cancer | birds)",type="l", cex.axis = 1.5, cex.lab = 1.5, lwd = 4)
abline(a=0,b=1,col='lightgrey', lwd = 4)
points(0.05,f(0.05),col='red',pch=16, cex = 2)
lines(c(0.05,0.05),c(0,f(0.05)),col='red', lwd = 4)
# odds ratios
par(mar=c(5, 4, 2, 2) + 0.1)
plot(p,f(p),xlab="P(lung cancer | no birds)",ylab="P(lung cancer | birds)",type="l", cex.axis = 1.5, cex.lab = 1.5, lwd = 4)
abline(a=0,b=1,col='lightgrey')
points(0.05,f(0.05),col='red',pch=16, cex = 2)
lines(c(0.05,0.05),c(0,f(0.05)),col='red', lwd = 4)
lines(c(-1,0.05),c(f(0.05),f(0.05)),col='red', lwd = 4)
# odds ratios
par(mar=c(5, 4, 2, 2) + 0.1)
plot(p,f(p),xlab="P(lung cancer | no birds)",ylab="P(lung cancer | birds)",type="l", cex.axis = 1.5, cex.lab = 1.5, lwd = 4)
abline(a=0,b=1,col='lightgrey'm lwd = 4)
# odds ratios
par(mar=c(5, 4, 2, 2) + 0.1)
plot(p,f(p),xlab="P(lung cancer | no birds)",ylab="P(lung cancer | birds)",type="l", cex.axis = 1.5, cex.lab = 1.5, lwd = 4)
abline(a=0,b=1,col='lightgrey', lwd = 4)
points(0.05,f(0.05),col='red',pch=16, cex = 2)
lines(c(0.05,0.05),c(0,f(0.05)),col='red', lwd = 4)
lines(c(-1,0.05),c(f(0.05),f(0.05)),col='red', lwd = 4)
library(ROCR)
data(email)
email$cc       = as.factor(ifelse(email$cc > 0, "yes", "no"))
email$attach   = as.factor(ifelse(email$attach > 0, "yes", "no"))
email$dollar   = as.factor(ifelse(email$dollar > 0, "yes", "no"))
email$inherit  = as.factor(ifelse(email$inherit > 0, "yes", "no"))
email$password = as.factor(ifelse(email$password > 0, "yes", "no"))
email$format       = as.factor(ifelse(email$format, "HTML", "Plain"))
data(email)
email$cc       = as.factor(ifelse(email$cc > 0, "yes", "no"))
email$attach   = as.factor(ifelse(email$attach > 0, "yes", "no"))
email$dollar   = as.factor(ifelse(email$dollar > 0, "yes", "no"))
email$inherit  = as.factor(ifelse(email$inherit > 0, "yes", "no"))
email$password = as.factor(ifelse(email$password > 0, "yes", "no"))
email$format       = as.factor(ifelse(email$format, "HTML", "Plain"))
g_full = glm(spam ~ ., data=email, family=binomial)
par(mar=c(5, 4, 0, 2) + 0.1)
set.seed(1)
jitter = rnorm(nrow(email), sd=0.08)
plot(g_full$fitted.values, email$spam+jitter,
xlim=0:1, ylim=c(-0.5,1.5), axes=FALSE,
xlab="Predicted probability", ylab="",
col=COL[1,3], pch=16)
axis(1)
axis(2, at=c(0,1), labels=c("0 (not spam)", "1 (spam)"))
email$sent_email   = as.factor(ifelse(email$sent_email, "yes", "no"))
par(mar=c(5, 4, 0, 2) + 0.1)
set.seed(1)
jitter = rnorm(nrow(email), sd=0.08)
plot(g_full$fitted.values, email$spam+jitter,
xlim=0:1, ylim=c(-0.5,1.5), axes=FALSE,
xlab="Predicted probability", ylab="",
col=COL[1,3], pch=16)
axis(1)
axis(2, at=c(0,1), labels=c("0 (not spam)", "1 (spam)"))
abline(v=0.75,col='red',lwd=2)
library(openintro)
data(email)
email$cc       = as.factor(ifelse(email$cc > 0, "yes", "no"))
email$attach   = as.factor(ifelse(email$attach > 0, "yes", "no"))
email$dollar   = as.factor(ifelse(email$dollar > 0, "yes", "no"))
email$inherit  = as.factor(ifelse(email$inherit > 0, "yes", "no"))
email$password = as.factor(ifelse(email$password > 0, "yes", "no"))
email$format       = as.factor(ifelse(email$format, "HTML", "Plain"))
email$sent_email   = as.factor(ifelse(email$sent_email, "yes", "no"))
email$image        = as.factor(ifelse(email$image, "yes", "no"))
email$from         = as.factor(ifelse(email$from, "yes", "no"))
email$to_multiple  = as.factor(ifelse(email$to_multiple, "yes", "no"))
email$re_subj      = as.factor(ifelse(email$re_subj, "yes", "no"))
email$exclaim_subj = as.factor(ifelse(email$exclaim_subj, "yes", "no"))
email$urgent_subj  = as.factor(ifelse(email$urgent_subj, "yes", "no"))
email$time = NULL
email$viagra = NULL
g_full = glm(spam ~ ., data=email, family=binomial)
summary(g_full)
par(mar=c(5, 4, 0, 2) + 0.1)
set.seed(1)
jitter = rnorm(nrow(email), sd=0.08)
plot(g_full$fitted.values, email$spam+jitter,
xlim=0:1, ylim=c(-0.5,1.5), axes=FALSE,
xlab="Predicted probability", ylab="",
col=COL[1,3], pch=16)
axis(1)
axis(2, at=c(0,1), labels=c("0 (not spam)", "1 (spam)"))
library(ROCR)
par(mar=c(5, 4, 2, 2) + 0.1)
pred = prediction(g_full$fitted.values, email$spam)
perf = performance(pred,"tpr","fpr")
plot(perf)
abline(a=0,b=1,col="lightgrey")
par(mar=c(5, 4, 2, 2) + 0.1)
pred = prediction(g_full$fitted.values, email$spam)
perf = performance(pred,"tpr","fpr")
plot(perf)
abline(a=0,b=1,col="lightgrey")
par(mar=c(5, 4, 2, 2) + 0.1)
pred = prediction(g_full$fitted.values, email$spam)
perf = performance(pred,"tpr","fpr")
plot(perf)
abline(a=0,b=1,col="lightgrey")
par(mar=c(5, 4, 2, 2) + 0.1)
pred = prediction(g_full$fitted.values, email$spam)
perf = performance(pred,"tpr","fpr")
plot(perf, lwd = 4)
abline(a=0,b=1,col="lightgrey", lwd = 4)
par(mar=c(5, 4, 2, 2) + 0.1)
pred = prediction(g_full$fitted.values, email$spam)
perf = performance(pred,"tpr","fpr")
plot(perf, lwd = 4, cex.lab = 2)
abline(a=0,b=1,col="lightgrey", lwd = 4)
par(mar=c(5, 4, 2, 2) + 0.1)
pred = prediction(g_full$fitted.values, email$spam)
perf = performance(pred,"tpr","fpr")
plot(perf, lwd = 4, cex.lab = 1.5)
abline(a=0,b=1,col="lightgrey", lwd = 4)
g_refined = glm(spam ~ to_multiple+cc+image+attach+winner+password+line_breaks+format+re_subj+urgent_subj+exclaim_mess, data=email, family=binomial)
summary(g_refined)
par(mar=c(5, 4, 2, 2) + 0.1)
pred = prediction(g_full$fitted.values, email$spam)
perf = performance(pred,"tpr","fpr")
plot(perf, lwd = 4, cex.lab = 1.5)
abline(a=0,b=1,col="lightgrey", lwd = 4)
g_full = glm(spam ~ ., data=email, family=binomial)
summary(g_full)
par(mar=c(5, 4, 2, 2) + 0.1)
g_full = glm(spam ~ ., data=email, family=binomial)
pred = prediction(g_full$fitted.values, email$spam)
perf = performance(pred,"tpr","fpr")
plot(perf, lwd = 4, cex.lab = 1.5)
abline(a=0,b=1,col="lightgrey", lwd = 4)
pred_full = prediction( g_full$fitted.values, email$spam)
pred_refined = prediction( g_refined$fitted.values, email$spam)
aucs = round(c(performance(pred_full,"auc")@y.values[[1]], performance(pred_refined,"auc")@y.values[[1]]),3)
par(mar=c(5, 4, 2, 2) + 0.1)
plot(performance(pred_full,"tpr","fpr"), lwd = 2)
plot(performance(pred_refined,"tpr","fpr"),add=TRUE, col=COL[1], lwd = 2)
legend("bottomright",paste0(c("Full","Refined"), " (AUC: ",aucs,")"),col=c("black",COL[1]), lwd = 2, lty=1)
abline(a=0,b=1,col="lightgrey")
pred_full = prediction( g_full$fitted.values, email$spam)
pred_refined = prediction( g_refined$fitted.values, email$spam)
aucs = round(c(performance(pred_full,"auc")@y.values[[1]], performance(pred_refined,"auc")@y.values[[1]]),3)
par(mar=c(5, 4, 2, 2) + 0.1)
plot(performance(pred_full,"tpr","fpr"), lwd = 4)
plot(performance(pred_refined,"tpr","fpr"),add=TRUE, col=COL[1], lwd = 4)
legend("bottomright",paste0(c("Full","Refined"), " (AUC: ",aucs,")"),col=c("black",COL[1]), lwd = 2, lty=1)
abline(a=0,b=1,col="lightgrey", lwd = 4)
pred_full = prediction( g_full$fitted.values, email$spam)
pred_refined = prediction( g_refined$fitted.values, email$spam)
aucs = round(c(performance(pred_full,"auc")@y.values[[1]], performance(pred_refined,"auc")@y.values[[1]]),3)
par(mar=c(5, 4, 2, 2) + 0.1)
plot(performance(pred_full,"tpr","fpr"), lwd = 4)
plot(performance(pred_refined,"tpr","fpr"),add=TRUE, col=COL[1], lwd = 4)
legend("bottomright",paste0(c("Full","Refined"), " (AUC: ",aucs,")"),col=c("black",COL[1]), lwd = 2, lty=1, cex = 2)
abline(a=0,b=1,col="lightgrey", lwd = 4)
pred_full = prediction( g_full$fitted.values, email$spam)
pred_refined = prediction( g_refined$fitted.values, email$spam)
aucs = round(c(performance(pred_full,"auc")@y.values[[1]], performance(pred_refined,"auc")@y.values[[1]]),3)
par(mar=c(5, 4, 2, 2) + 0.1)
plot(performance(pred_full,"tpr","fpr"), lwd = 4)
plot(performance(pred_refined,"tpr","fpr"),add=TRUE, col=COL[1], lwd = 4)
legend("bottomright",paste0(c("Full","Refined"), " (AUC: ",aucs,")"),col=c("black",COL[1]), lwd = 2, lty=1, cex = 1.5)
abline(a=0,b=1,col="lightgrey", lwd = 4)
pred_full = prediction( g_full$fitted.values, email$spam)
pred_refined = prediction( g_refined$fitted.values, email$spam)
aucs = round(c(performance(pred_full,"auc")@y.values[[1]], performance(pred_refined,"auc")@y.values[[1]]),3)
par(mar=c(5, 4, 2, 2) + 0.1, cex.lab = 1.5)
plot(performance(pred_full,"tpr","fpr"), lwd = 4)
plot(performance(pred_refined,"tpr","fpr"),add=TRUE, col=COL[1], lwd = 4)
legend("bottomright",paste0(c("Full","Refined"), " (AUC: ",aucs,")"),col=c("black",COL[1]), lwd = 2, lty=1, cex = 1.5)
abline(a=0,b=1,col="lightgrey", lwd = 4)
U = c()
p = c()
for(thres in seq(0,1,0.01))
{
if (thres %in% c(0,1))
next
t = table(email$spam, g_full$fitted.values>thres)
FN = t[2,1]
FP = t[1,2]
TP = t[2,2]
TN = t[1,1]
U = c(U, TP + TN - 50 * FP - 5 * FN)
p = c(p,thres)
}
pdf("utility.pdf",width=6,height=4)
par(mar=c(5, 4, 2, 2) + 0.1)
plot(U ~ p,type='l')
points(0.75,1422,col=COL[4],lwd=2)
U = c()
p = c()
for(thres in seq(0,1,0.01))
{
if (thres %in% c(0,1))
next
t = table(email$spam, g_full$fitted.values>thres)
FN = t[2,1]
FP = t[1,2]
TP = t[2,2]
TN = t[1,1]
U = c(U, TP + TN - 50 * FP - 5 * FN)
p = c(p,thres)
}
par(mar=c(5, 4, 2, 2) + 0.1)
plot(U ~ p,type='l')
points(0.75,1422,col=COL[4],lwd=2)
U = c()
p = c()
for(thres in seq(0,1,0.01))
{
if (thres %in% c(0,1))
next
t = table(email$spam, g_full$fitted.values>thres)
FN = t[2,1]
FP = t[1,2]
TP = t[2,2]
TN = t[1,1]
U = c(U, TP + TN - 50 * FP - 5 * FN)
p = c(p,thres)
}
par(mar=c(5, 4, 2, 2) + 0.1)
plot(U ~ p,type='l', lwd = 4)
points(0.75,1422,col=COL[4],lwd=4)
U = c()
p = c()
for(thres in seq(0,1,0.01))
{
if (thres %in% c(0,1))
next
t = table(email$spam, g_full$fitted.values>thres)
FN = t[2,1]
FP = t[1,2]
TP = t[2,2]
TN = t[1,1]
U = c(U, TP + TN - 50 * FP - 5 * FN)
p = c(p,thres)
}
par(mar=c(5, 4, 2, 2) + 0.1)
plot(U ~ p,type='l', lwd = 4)
points(0.75,1422,col=COL[4],lwd=6)
U = c()
p = c()
for(thres in seq(0,1,0.01))
{
if (thres %in% c(0,1))
next
t = table(email$spam, g_full$fitted.values>thres)
FN = t[2,1]
FP = t[1,2]
TP = t[2,2]
TN = t[1,1]
U = c(U, TP + TN - 50 * FP - 5 * FN)
p = c(p,thres)
}
par(mar=c(5, 4, 2, 2) + 0.1)
plot(U ~ p,type='l', lwd = 4, cex.lab = 1.5)
points(0.75,1422,col=COL[4],lwd=6)
par(mar=c(5, 4, 2, 2) + 0.1)
plot(U[p>0.6] ~ p[p>0.6],type='l')
points(0.75,1422,col=COL[4],lwd=2)
U = c()
p = c()
for(thres in seq(0,1,0.01))
{
if (thres %in% c(0,1))
next
t = table(email$spam, g_full$fitted.values>thres)
FN = t[2,1]
FP = t[1,2]
TP = t[2,2]
TN = t[1,1]
U = c(U, TP + TN - 50 * FP - 5 * FN)
p = c(p,thres)
}
par(mar=c(5, 4, 2, 2) + 0.1)
plot(U ~ p,type='l', lwd = 4, cex.lab = 1.5)
points(0.75,1422,col=COL[4],cex = 2)
U = c()
p = c()
for(thres in seq(0,1,0.01))
{
if (thres %in% c(0,1))
next
t = table(email$spam, g_full$fitted.values>thres)
FN = t[2,1]
FP = t[1,2]
TP = t[2,2]
TN = t[1,1]
U = c(U, TP + TN - 50 * FP - 5 * FN)
p = c(p,thres)
}
par(mar=c(5, 4, 2, 2) + 0.1)
plot(U ~ p,type='l', lwd = 4, cex.lab = 1.5)
points(0.75,1422,col=COL[4],cex = 2, lwd = 2)
U = c()
p = c()
for(thres in seq(0,1,0.01))
{
if (thres %in% c(0,1))
next
t = table(email$spam, g_full$fitted.values>thres)
FN = t[2,1]
FP = t[1,2]
TP = t[2,2]
TN = t[1,1]
U = c(U, TP + TN - 50 * FP - 5 * FN)
p = c(p,thres)
}
par(mar=c(5, 4, 2, 2) + 0.1)
plot(U ~ p,type='l', lwd = 4, cex.lab = 1.5)
points(0.75,1422,col=COL[4],cex = 2, lwd = 3)
par(mar=c(5, 4, 2, 2) + 0.1)
plot(U[p>0.6] ~ p[p>0.6],type='l', lwd = 4, cex.lab = 1.5)
points(0.75,1422,col=COL[4],cex = 2, lwd = 3)
par(mar=c(5, 4, 2, 2) + 0.1)
plot(U[p>0.6] ~ p[p>0.6],type='l', lwd = 4, cex.lab = 1.5)
points(0.75,1422,col=COL[4],cex = 2, lwd = 3)
par(mar=c(5, 4, 2, 2) + 0.1)
plot(U[p>0.6] ~ p[p>0.6],type='l', lwd = 4, cex.lab = 1.5)
points(0.75,1422,col=COL[4],cex = 2, lwd = 3)
i=which.max(U)
points(p[i],U[i],col=COL[1],pch=16,cex = 2, lwd = 3)
par(mar=c(5, 4, 0, 2) + 0.1)
set.seed(1)
jitter = rnorm(nrow(email), sd=0.08)
plot(g_full$fitted.values, email$spam+jitter,
xlim=0:1, ylim=c(-0.5,1.5), axes=FALSE,
xlab="Predicted probability", ylab="",
col=COL[1,3], pch=16)
axis(1)
axis(2, at=c(0,1), labels=c("0 (not spam)", "1 (spam)"))
abline(v=p[i],col=COL[4],lwd=2)
