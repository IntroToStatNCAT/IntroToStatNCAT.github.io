knitr::opts_chunk$set(echo = FALSE)
# 1. Create a set of 250 million entries, where 88% of them are "support" and
# 12% are "not".
pop_size <- 250000000
possible_entries <- c(rep("support", 0.88 * pop_size),
rep("not", 0.12 * pop_size))
# 2. Sample 1000 entries without replacement.
sampled_entries <- sample(possible_entries, size = 1000, replace = F)
# 3. Compute p-hat: count the number that are "support", then divide by
# number of the sample size
sum(sampled_entries == "support")/1000
library(readr)
library(openintro)
library(here)
library(tidyverse)
data(COL)
phat <- rep(NA, 10000)
for(i in 1:10000){
sampled_entries <- sample(possible_entries, size = 1000)
phat[i] <- sum(sampled_entries == "support") / 1000
}
# df
sampling <- tibble(phat = phat)
# plot
ggplot(sampling, aes(x = phat)) +
geom_histogram(binwidth = 0.01, fill = COL[1]) +
theme_minimal() +
labs(x = "Simulated sample proportion", y = "")
phat <- rep(NA, 10000)
for(i in 1:10000){
sampled_entries <- sample(possible_entries, size = 1000)
phat[i] <- sum(sampled_entries == "support") / 1000
}
# df
sampling <- tibble(phat = phat)
# plot
ggplot(sampling, aes(x = phat)) +
geom_histogram(binwidth = 0.01, fill = COL[1]) +
theme_minimal() +
labs(x = "Simulated sample proportion", y = "")
phat <- rep(NA, 10000)
for(i in 1:10000){
sampled_entries <- sample(possible_entries, size = 1000)
phat[i] <- sum(sampled_entries == "support") / 1000
}
# df
sampling <- tibble(phat = phat)
# plot
ggplot(sampling, aes(x = phat)) +
geom_histogram(binwidth = 0.01, fill = COL[1]) +
theme_minimal(axis.text=element_text(size=12)) +
labs(x = "Simulated sample proportion", y = "")
phat <- rep(NA, 10000)
for(i in 1:10000){
sampled_entries <- sample(possible_entries, size = 1000)
phat[i] <- sum(sampled_entries == "support") / 1000
}
# df
sampling <- tibble(phat = phat)
# plot
ggplot(sampling, aes(x = phat)) +
geom_histogram(binwidth = 0.01, fill = COL[1]) +
theme_minimal() +
labs(x = "Simulated sample proportion", y = "")
phat <- rep(NA, 10000)
for(i in 1:10000){
sampled_entries <- sample(possible_entries, size = 1000)
phat[i] <- sum(sampled_entries == "support") / 1000
}
# df
sampling <- tibble(phat = phat)
# plot
ggplot(sampling, aes(x = phat)) +
geom_histogram(binwidth = 0.01, fill = COL[1]) +
theme_minimal(base_size = 20) +
labs(x = "Simulated sample proportion", y = "")
phat <- rep(NA, 10000)
for(i in 1:10000){
sampled_entries <- sample(possible_entries, size = 1000)
phat[i] <- sum(sampled_entries == "support") / 1000
}
# df
sampling <- tibble(phat = phat)
# plot
ggplot(sampling, aes(x = phat)) +
geom_histogram(binwidth = 0.01, fill = COL[1]) +
theme_minimal(base_size = 14) +
labs(x = "Simulated sample proportion", y = "")
ggplot(sampling, aes(x = phat)) +
geom_histogram(binwidth = 0.01, fill = COL[1]) +
theme_minimal(base_size = 14) +
labs(x = "Simulated sample proportion", y = "")
normTail(M = c(-2.33,2.33), col = COL[6,4], cex.axis = 1.25)
text(x = 0, y = 0.25, "0.98", col = COL[4], cex = 1.5)
lines(x = c(-2.33,-2.33), y = c(0, 0.15), lty = 2)
lines(x = c(2.33,2.33), y = c(0, 0.15), lty = 2)
text(x = -2.33, y = 0.20, "z = -2.33", col = COL[1], cex = 1.5)
text(x = 2.33, y = 0.20, "z = 2.33", col = COL[1], cex = 1.5)
text(x = -2.7, y = 0.03, "0.01", col = COL[4], cex = 1.5)
text(x = 2.7, y = 0.03, "0.01", col = COL[4], cex = 1.5)
normTail(M = c(-2.33,2.33), col = COL[6,4], cex.axis = 1.25)
text(x = 0, y = 0.25, "0.98", col = COL[4], cex = 1.5)
lines(x = c(-2.33,-2.33), y = c(0, 0.15), lty = 2)
lines(x = c(2.33,2.33), y = c(0, 0.15), lty = 2)
text(x = -2.33, y = 0.20, "z = -2.33", col = COL[1], cex = 1.5)
text(x = 2.33, y = 0.20, "z = 2.33", col = COL[1], cex = 1.5)
text(x = -2.7, y = 0.03, "0.01", col = COL[4], cex = 1.5)
text(x = 2.7, y = 0.03, "0.01", col = COL[4], cex = 1.5)
set.seed(8535)
gender <- c(rep('male', 24), rep('female', 24))
outcome <- c(rep(c('promoted', 'not promoted'), c(21, 3)), rep(c('promoted', 'not promoted'), c(14, 10)))
nsim  = 100
n     = length(gender)
group = gender
var1  = outcome
success = "promoted"
sim   = matrix(NA, nrow = n, ncol = nsim)
n1    = n2 = 24
statistic <- function(var1, group){
t1 <- var1 == success & group == levels(as.factor(group))[1]
t2 <- var1 == success & group == levels(as.factor(group))[2]
sum(t1)/n1 - sum(t2)/n2
}
for(i in 1:nsim){
sim[,i] = sample(group, n, replace = FALSE)
}
sim_dist = apply(sim, 2, statistic, var1 = outcome)
diffs    = sim_dist
pval     = sum(diffs >= 0.29) / nsim
values  <- table(sim_dist)
X <- c()
Y <- c()
for(i in 1:length(diffs)){
x   <- diffs[i]
rec <- sum(sim_dist == x)
X   <- append(X, rep(x, rec))
Y   <- append(Y, 1:rec)
}
plot(X, Y, xlim=range(diffs)+c(-1,1)*sd(diffs)/4, xlab = "Difference in promotion rates", ylab= "", axes = FALSE, ylim=c(0,max(Y)), col=COL[1], cex=1.2, cex.axis = 2, pch=20)
axis(1, at = seq(-0.4,0.4,0.1), labels = c(-0.4,"",-0.2,"",0,"",0.2,"",0.4))
abline(h=0)
set.seed(8535)
gender <- c(rep('male', 24), rep('female', 24))
outcome <- c(rep(c('promoted', 'not promoted'), c(21, 3)), rep(c('promoted', 'not promoted'), c(14, 10)))
nsim  = 100
n     = length(gender)
group = gender
var1  = outcome
success = "promoted"
sim   = matrix(NA, nrow = n, ncol = nsim)
n1    = n2 = 24
statistic <- function(var1, group){
t1 <- var1 == success & group == levels(as.factor(group))[1]
t2 <- var1 == success & group == levels(as.factor(group))[2]
sum(t1)/n1 - sum(t2)/n2
}
for(i in 1:nsim){
sim[,i] = sample(group, n, replace = FALSE)
}
sim_dist = apply(sim, 2, statistic, var1 = outcome)
diffs    = sim_dist
pval     = sum(diffs >= 0.29) / nsim
values  <- table(sim_dist)
X <- c()
Y <- c()
for(i in 1:length(diffs)){
x   <- diffs[i]
rec <- sum(sim_dist == x)
X   <- append(X, rep(x, rec))
Y   <- append(Y, 1:rec)
}
plot(X, Y, xlim=range(diffs)+c(-1,1)*sd(diffs)/4, xlab = "Difference in promotion rates", ylab= "", axes = FALSE, ylim=c(0,max(Y)), col=COL[1], cex=1.2, cex.axis = 2, pch=20)
axis(1, at = seq(-0.4,0.4,0.1), labels = c(-0.4,"",-0.2,"",0,"",0.2,"",0.4))
abline(h=0)
