legend("topright", inset = 0.05, col = c("blue","darkgreen"), legend = c("mean","median"), lty = c(2,1), lwd = 3)
set.seed(20)
par(mar=c(1,1,1,1))
sym = rnorm(10000, 0,1)
d = sym
plot(density(d), axes = FALSE, xlab = "", ylab = "", main = "Symmetric", lwd =4, cex.main=3)
abline(h = 0, col = "gray")
box()
abline(v = mean(d), col = "blue", lty = 2, lwd = 5)
abline(v = median(d), col = "darkgreen", lty = 1, lwd = 5)
legend("topright", inset = 0.05, col = c("blue","darkgreen"), legend = c("mean","median"), lty = c(2,1), lwd = 3)
set.seed(20)
par(mar=c(1,1,1,1))
sym = rnorm(10000, 0,1)
d = sym
plot(density(d), axes = FALSE, xlab = "", ylab = "", main = "Symmetric", lwd =4, cex.main=3.5, adj = 0.25, line = -2)
abline(h = 0, col = "gray")
box()
abline(v = mean(d), col = "blue", lty = 2, lwd = 5)
abline(v = median(d), col = "darkgreen", lty = 1, lwd = 5)
legend("topright", inset = 0.05, col = c("blue","darkgreen"), legend = c("mean","median"), lty = c(2,1), lwd = 3)
set.seed(20)
par(mar=c(1,1,1,1))
sym = rnorm(10000, 0,1)
d = sym
plot(density(d), axes = FALSE, xlab = "", ylab = "", main = "Symmetric", lwd =4, cex.main=3.5, adj = 0.1, line = -2)
abline(h = 0, col = "gray")
box()
abline(v = mean(d), col = "blue", lty = 2, lwd = 5)
abline(v = median(d), col = "darkgreen", lty = 1, lwd = 5)
legend("topright", inset = 0.05, col = c("blue","darkgreen"), legend = c("mean","median"), lty = c(2,1), lwd = 3)
set.seed(20)
par(mar=c(1,1,1,1))
sym = rnorm(10000, 0,1)
d = sym
plot(density(d), axes = FALSE, xlab = "", ylab = "", main = "Symmetric", lwd =4, cex.main=3.5, adj = 0.05, line = -2.1)
abline(h = 0, col = "gray")
box()
abline(v = mean(d), col = "blue", lty = 2, lwd = 5)
abline(v = median(d), col = "darkgreen", lty = 1, lwd = 5)
legend("topright", inset = 0.05, col = c("blue","darkgreen"), legend = c("mean","median"), lty = c(2,1), lwd = 3)
d = read.csv("basket_games.csv")
basket_games = d$basket_games[!is.na(d$basket_games)]
# hist
histPlot(basket_games, col = COL[1], xlab = "# of basketball games attended", ylab = "", cex.lab=2, cex.axis=2)
histPlot(log(basket_games), col = COL[1], xlab = "# of basketball games attended", ylab = "", cex.lab=2, cex.axis=2)
library(readr)
library(openintro)
library(datasets)
library(tidyverse)
library(scales)
data(COL)
age_survived <- apply(Titanic, c(3, 4), sum)
titanic_data <- tibble(
Age = c(rep("Child", 52 + 57), rep("Adult", 1438 + 654)),
Survival = c(rep("Died", 52), rep("Survived", 57), rep("Died", 1438), rep("Survived", 654))
)
ggplot(titanic_data, aes(x = Survival)) +
geom_bar(fill = COL[1]) +
labs(y = "Frequency") +
theme_bw()
age_survived <- apply(Titanic, c(3, 4), sum)
titanic_data <- tibble(
Age = c(rep("Child", 52 + 57), rep("Adult", 1438 + 654)),
Survival = c(rep("Died", 52), rep("Survived", 57), rep("Died", 1438), rep("Survived", 654))
)
ggplot(titanic_data, aes(x = Survival)) +
geom_bar(fill = COL[1]) +
labs(y = "Frequency") +
theme_bw(base_size = 10)
age_survived <- apply(Titanic, c(3, 4), sum)
titanic_data <- tibble(
Age = c(rep("Child", 52 + 57), rep("Adult", 1438 + 654)),
Survival = c(rep("Died", 52), rep("Survived", 57), rep("Died", 1438), rep("Survived", 654))
)
ggplot(titanic_data, aes(x = Survival)) +
geom_bar(fill = COL[1]) +
labs(y = "Frequency") +
theme_bw(base_size = 20)
age_survived <- apply(Titanic, c(3, 4), sum)
titanic_data <- tibble(
Age = c(rep("Child", 52 + 57), rep("Adult", 1438 + 654)),
Survival = c(rep("Died", 52), rep("Survived", 57), rep("Died", 1438), rep("Survived", 654))
)
ggplot(titanic_data, aes(x = Survival)) +
geom_bar(fill = COL[1]) +
labs(y = "Frequency") +
theme_bw(base_size = 15)
ggplot(titanic_data, aes(x = Survival)) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill = COL[1]) +
labs(y = "Relative frequency") +
scale_y_continuous(labels=percent) +
theme_bw(base_size = 25, axis.text = element_text(size = 14))
ggplot(titanic_data, aes(x = Survival)) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill = COL[1]) +
labs(y = "Relative frequency") +
scale_y_continuous(labels=percent) +
theme_bw(base_size = 25, axis.text.x = element_text(size = 14))
mosaicplot(table(titanic_data$Age, titanic_data$Survival), color = c(COL[1],COL[1,3]), ylab = "", main = "", cex.axis = 1.5)
mosaicplot(table(titanic_data$Age, titanic_data$Survival), color = c(COL[1],COL[1,3]), ylab = "", main = "", cex.axis = 2)
ggplot(titanic_data, aes(x = Age, fill = Survival)) +
geom_bar(position = "fill") +
labs(y = "Relative frequency") +
theme_bw(base_size = 25) +
scale_fill_manual(values = c(COL[1], COL[1,3]), breaks = c("Died", "Survived"))+
opts(axis.title.x = theme_text(vjust=-0.5))
ggplot(titanic_data, aes(x = Age, fill = Survival)) +
geom_bar(position = "fill") +
labs(y = "Relative frequency") +
theme_bw(base_size = 25,axis.title.x = element_text(vjust=-0.5)) +
scale_fill_manual(values = c(COL[1], COL[1,3]), breaks = c("Died", "Survived"))
ggplot(titanic_data, aes(x = Age, fill = Survival)) +
geom_bar(position = "fill") +
labs(y = "Relative frequency") +
theme_bw(base_size = 25) +
theme(axis.title.x = element_text(vjust=-0.5))+
scale_fill_manual(values = c(COL[1], COL[1,3]), breaks = c("Died", "Survived"))
ggplot(titanic_data, aes(x = Age, fill = Survival)) +
geom_bar(position = "fill") +
labs(y = "Relative frequency") +
theme_bw(base_size = 25) +
theme(axis.title.x = element_text(vjust=-1))+
scale_fill_manual(values = c(COL[1], COL[1,3]), breaks = c("Died", "Survived"))
ggplot(titanic_data, aes(x = Age, fill = Survival)) +
geom_bar(position = "fill") +
labs(y = "Relative frequency") +
theme_bw(base_size = 25) +
theme(axis.title.x = element_text(vjust=1))+
scale_fill_manual(values = c(COL[1], COL[1,3]), breaks = c("Died", "Survived"))
ggplot(titanic_data, aes(x = Age, fill = Survival)) +
geom_bar(position = "fill") +
labs(y = "Relative frequency") +
theme_bw(base_size = 25) +
theme(axis.title.x = element_text(vjust=1.5))+
scale_fill_manual(values = c(COL[1], COL[1,3]), breaks = c("Died", "Survived"))
ggplot(titanic_data, aes(x = Age, fill = Survival)) +
geom_bar(position = "fill") +
labs(y = "Relative frequency") +
theme_bw(base_size = 25) +
theme(axis.title.x = element_text(vjust=2.5))+
scale_fill_manual(values = c(COL[1], COL[1,3]), breaks = c("Died", "Survived"))
d = read.csv("msw3-all")
d = read.csv("msw3-all")
d = read_csv("msw3-all.csv")
colors = rev(as.vector(COL))
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))
legend("center", names(rev(sort(table(d$Order)))), fill = rev(c(colors,"white")))
d = read_csv("msw3-all.csv")
colors = rev(as.vector(COL))
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))
pie(sort(table(d$Order)), labels="", col = c(colors))
colors = rev(as.vector(COL))
legend("center", names(rev(sort(table(d$Order)))), fill = rev(c(colors,"white")))
d = read_csv("msw3-all.csv")
colors = rev(as.vector(COL))
legend("center", names(rev(sort(table(d$Order)))), fill = rev(c(colors,"white")))
d = read_csv("msw3-all.csv")
colors = rev(as.vector(COL))
plot.new()
legend("center", names(rev(sort(table(d$Order)))), fill = rev(c(colors,"white")))
d = read_csv("msw3-all.csv")
colors = rev(as.vector(COL))
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))
d = read.csv("msw3-all")
d = read.csv("msw3-all.csv")
colors = rev(as.vector(COL))
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))
dev.off()
plot.new()
legend("center", names(rev(sort(table(d$Order)))), fill = rev(c(colors,"white")))
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))
legend("center", names(rev(sort(table(d$Order)))), fill = rev(c(colors,"white")))
?rev
View(d)
include_graphics(c("mammal_pie_chart.pdf", "mammal_pie_chart_legend.pdf"))
d = read.csv("year_clubs.csv")
d$year = factor(d$year, levels = c("First-year","Sophomore","Junior","Senior","Grad student"))
d = d[d$year != "Grad student",]
d$year = droplevels(d$year)
# box
boxPlot(d$clubs, fact = d$year, col = COL[1], ylab = "", cex=2, cex.axis = 3)
d = read.csv("year_clubs.csv")
d$year = factor(d$year, levels = c("First-year","Sophomore","Junior","Senior","Grad student"))
d = d[d$year != "Grad student",]
d$year = droplevels(d$year)
# box
boxPlot(d$clubs, fact = d$year, col = COL[1], ylab = "", cex=2, cex.axis = 4)
d = read.csv("year_clubs.csv")
d$year = factor(d$year, levels = c("First-year","Sophomore","Junior","Senior","Grad student"))
d = d[d$year != "Grad student",]
d$year = droplevels(d$year)
# box
boxPlot(d$clubs, fact = d$year, col = COL[1], ylab = "", cex=4, cex.axis = 4)
d = read.csv("year_clubs.csv")
d$year = factor(d$year, levels = c("First-year","Sophomore","Junior","Senior","Grad student"))
d = d[d$year != "Grad student",]
d$year = droplevels(d$year)
# box
boxPlot(d$clubs, fact = d$year, col = COL[1], ylab = "", par(cex.axis=2, cex=2))
d = read.csv("year_clubs.csv")
d$year = factor(d$year, levels = c("First-year","Sophomore","Junior","Senior","Grad student"))
d = d[d$year != "Grad student",]
d$year = droplevels(d$year)
# box
boxPlot(d$clubs, fact = d$year, col = COL[1], ylab = "")
par(cex.axis=2, cex=2)
d = read.csv("year_clubs.csv")
d$year = factor(d$year, levels = c("First-year","Sophomore","Junior","Senior","Grad student"))
d = d[d$year != "Grad student",]
d$year = droplevels(d$year)
# box
boxPlot(d$clubs, fact = d$year, col = COL[1], ylab = "")
par(cex.axis=20, cex=2)
d = read.csv("year_clubs.csv")
d$year = factor(d$year, levels = c("First-year","Sophomore","Junior","Senior","Grad student"))
d = d[d$year != "Grad student",]
d$year = droplevels(d$year)
# box
boxPlot(d$clubs, fact = d$year, col = COL[1], ylab = "")
d = read.csv("year_clubs.csv")
d$year = factor(d$year, levels = c("First-year","Sophomore","Junior","Senior","Grad student"))
d = d[d$year != "Grad student",]
d$year = droplevels(d$year)
# box
par(cex.axis=2, cex=2)
boxPlot(d$clubs, fact = d$year, col = COL[1], ylab = "")
d = read.csv("year_clubs.csv")
d$year = factor(d$year, levels = c("First-year","Sophomore","Junior","Senior","Grad student"))
d = d[d$year != "Grad student",]
d$year = droplevels(d$year)
# box
par(cex.axis=1, cex=2)
boxPlot(d$clubs, fact = d$year, col = COL[1], ylab = "")
d = read.csv("year_clubs.csv")
d$year = factor(d$year, levels = c("First-year","Sophomore","Junior","Senior","Grad student"))
d = d[d$year != "Grad student",]
d$year = droplevels(d$year)
# box
par(cex.axis=0.5, cex=2)
boxPlot(d$clubs, fact = d$year, col = COL[1], ylab = "")
d = read.csv("year_clubs.csv")
d$year = factor(d$year, levels = c("First-year","Sophomore","Junior","Senior","Grad student"))
d = d[d$year != "Grad student",]
d$year = droplevels(d$year)
# box
par(cex.axis=0.5, cex=1)
boxPlot(d$clubs, fact = d$year, col = COL[1], ylab = "")
d = read.csv("year_clubs.csv")
d$year = factor(d$year, levels = c("First-year","Sophomore","Junior","Senior","Grad student"))
d = d[d$year != "Grad student",]
d$year = droplevels(d$year)
# box
par(cex.axis=0.6, cex=1.2)
boxPlot(d$clubs, fact = d$year, col = COL[1], ylab = "")
d = read.csv("year_clubs.csv")
d$year = factor(d$year, levels = c("First-year","Sophomore","Junior","Senior","Grad student"))
d = d[d$year != "Grad student",]
d$year = droplevels(d$year)
# box
par(cex.axis=1, cex=1.2)
boxPlot(d$clubs, fact = d$year, col = COL[1], ylab = "")
d = read.csv("year_clubs.csv")
d$year = factor(d$year, levels = c("First-year","Sophomore","Junior","Senior","Grad student"))
d = d[d$year != "Grad student",]
d$year = droplevels(d$year)
# box
par(cex.axis=1.1, cex=1.2)
boxPlot(d$clubs, fact = d$year, col = COL[1], ylab = "")
d = read_csv("msw3-all.csv")
colors = rev(as.vector(COL))
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))
ggplot(titanic_data, aes(x = Age, fill = Survival)) +
geom_bar() +
labs(y = "Frequency") +
theme_bw(base_size = 25) +
scale_fill_manual(values = c(COL[1], COL[1,3]), breaks = c("Died", "Survived"))
ggplot(titanic_data, aes(x = Age, fill = Survival)) +
geom_bar(position = "dodge") +
labs(y = "Frequency") +
theme_bw(base_size = 25) +
scale_fill_manual(values = c(COL[1], COL[1,3]), breaks = c("Died", "Survived"))
set.seed(8535)
gender <- c(rep('male', 24), rep('female', 24))
outcome <- c(rep(c('promoted', 'not promoted'), c(21, 3)), rep(c('promoted', 'not promoted'), c(14, 10)))
nsim  = 100
n     = length(gender)
group = gender
var1  = outcome
success = "promoted"
sim   = matrix(NA, nrow = n, ncol = nsim)
n1    = n2 = 24
statistic <- function(var1, group){
t1 <- var1 == success & group == levels(as.factor(group))[1]
t2 <- var1 == success & group == levels(as.factor(group))[2]
sum(t1)/n1 - sum(t2)/n2
}
for(i in 1:nsim){
sim[,i] = sample(group, n, replace = FALSE)
}
sim_dist = apply(sim, 2, statistic, var1 = outcome)
diffs    = sim_dist
pval     = sum(diffs >= 0.29) / nsim
values  <- table(sim_dist)
X <- c()
Y <- c()
for(i in 1:length(diffs)){
x   <- diffs[i]
rec <- sum(sim_dist == x)
X   <- append(X, rep(x, rec))
Y   <- append(Y, 1:rec)
}
plot(X, Y, xlim=range(diffs)+c(-1,1)*sd(diffs)/4, xlab = "Difference in promotion rates", axes = FALSE, ylim=c(0,max(Y)), col=COL[1], cex=0.8, pch=20)
axis(1, at = seq(-0.4,0.4,0.1), labels = c(-0.4,"",-0.2,"",0,"",0.2,"",0.4))
abline(h=0)
set.seed(8535)
gender <- c(rep('male', 24), rep('female', 24))
outcome <- c(rep(c('promoted', 'not promoted'), c(21, 3)), rep(c('promoted', 'not promoted'), c(14, 10)))
nsim  = 100
n     = length(gender)
group = gender
var1  = outcome
success = "promoted"
sim   = matrix(NA, nrow = n, ncol = nsim)
n1    = n2 = 24
statistic <- function(var1, group){
t1 <- var1 == success & group == levels(as.factor(group))[1]
t2 <- var1 == success & group == levels(as.factor(group))[2]
sum(t1)/n1 - sum(t2)/n2
}
for(i in 1:nsim){
sim[,i] = sample(group, n, replace = FALSE)
}
sim_dist = apply(sim, 2, statistic, var1 = outcome)
diffs    = sim_dist
pval     = sum(diffs >= 0.29) / nsim
values  <- table(sim_dist)
X <- c()
Y <- c()
for(i in 1:length(diffs)){
x   <- diffs[i]
rec <- sum(sim_dist == x)
X   <- append(X, rep(x, rec))
Y   <- append(Y, 1:rec)
}
plot(X, Y, xlim=range(diffs)+c(-1,1)*sd(diffs)/4, xlab = "Difference in promotion rates", ylab="",axes = FALSE, ylim=c(0,max(Y)), col=COL[1], cex=2, pch=20)
axis(1, at = seq(-0.4,0.4,0.1), labels = c(-0.4,"",-0.2,"",0,"",0.2,"",0.4))
abline(h=0)
set.seed(8535)
gender <- c(rep('male', 24), rep('female', 24))
outcome <- c(rep(c('promoted', 'not promoted'), c(21, 3)), rep(c('promoted', 'not promoted'), c(14, 10)))
nsim  = 100
n     = length(gender)
group = gender
var1  = outcome
success = "promoted"
sim   = matrix(NA, nrow = n, ncol = nsim)
n1    = n2 = 24
statistic <- function(var1, group){
t1 <- var1 == success & group == levels(as.factor(group))[1]
t2 <- var1 == success & group == levels(as.factor(group))[2]
sum(t1)/n1 - sum(t2)/n2
}
for(i in 1:nsim){
sim[,i] = sample(group, n, replace = FALSE)
}
sim_dist = apply(sim, 2, statistic, var1 = outcome)
diffs    = sim_dist
pval     = sum(diffs >= 0.29) / nsim
values  <- table(sim_dist)
X <- c()
Y <- c()
for(i in 1:length(diffs)){
x   <- diffs[i]
rec <- sum(sim_dist == x)
X   <- append(X, rep(x, rec))
Y   <- append(Y, 1:rec)
}
plot(X, Y, xlim=range(diffs)+c(-1,1)*sd(diffs)/4, xlab = "Difference in promotion rates", ylab="",axes = FALSE, ylim=c(0,max(Y)), col=COL[1], cex=2, cex.lab =2, pch=20)
axis(1, at = seq(-0.4,0.4,0.1), labels = c(-0.4,"",-0.2,"",0,"",0.2,"",0.4))
abline(h=0)
set.seed(8535)
gender <- c(rep('male', 24), rep('female', 24))
outcome <- c(rep(c('promoted', 'not promoted'), c(21, 3)), rep(c('promoted', 'not promoted'), c(14, 10)))
nsim  = 100
n     = length(gender)
group = gender
var1  = outcome
success = "promoted"
sim   = matrix(NA, nrow = n, ncol = nsim)
n1    = n2 = 24
statistic <- function(var1, group){
t1 <- var1 == success & group == levels(as.factor(group))[1]
t2 <- var1 == success & group == levels(as.factor(group))[2]
sum(t1)/n1 - sum(t2)/n2
}
for(i in 1:nsim){
sim[,i] = sample(group, n, replace = FALSE)
}
sim_dist = apply(sim, 2, statistic, var1 = outcome)
diffs    = sim_dist
pval     = sum(diffs >= 0.29) / nsim
values  <- table(sim_dist)
X <- c()
Y <- c()
for(i in 1:length(diffs)){
x   <- diffs[i]
rec <- sum(sim_dist == x)
X   <- append(X, rep(x, rec))
Y   <- append(Y, 1:rec)
}
plot(X, Y, xlim=range(diffs)+c(-1,1)*sd(diffs)/4, xlab = "Difference in promotion rates", ylab="",axes = FALSE, ylim=c(0,max(Y)), col=COL[1], cex = 2, cex.lab = 1.5, pch=20)
axis(1, at = seq(-0.4,0.4,0.1), labels = c(-0.4,"",-0.2,"",0,"",0.2,"",0.4))
abline(h=0)
set.seed(8535)
gender <- c(rep('male', 24), rep('female', 24))
outcome <- c(rep(c('promoted', 'not promoted'), c(21, 3)), rep(c('promoted', 'not promoted'), c(14, 10)))
nsim  = 100
n     = length(gender)
group = gender
var1  = outcome
success = "promoted"
sim   = matrix(NA, nrow = n, ncol = nsim)
n1    = n2 = 24
statistic <- function(var1, group){
t1 <- var1 == success & group == levels(as.factor(group))[1]
t2 <- var1 == success & group == levels(as.factor(group))[2]
sum(t1)/n1 - sum(t2)/n2
}
for(i in 1:nsim){
sim[,i] = sample(group, n, replace = FALSE)
}
sim_dist = apply(sim, 2, statistic, var1 = outcome)
diffs    = sim_dist
pval     = sum(diffs >= 0.29) / nsim
values  <- table(sim_dist)
X <- c()
Y <- c()
for(i in 1:length(diffs)){
x   <- diffs[i]
rec <- sum(sim_dist == x)
X   <- append(X, rep(x, rec))
Y   <- append(Y, 1:rec)
}
plot(X, Y, xlim=range(diffs)+c(-1,1)*sd(diffs)/4, xlab = "Difference in promotion rates", ylab="",axes = FALSE, ylim=c(0,max(Y)), col=COL[1], cex = 1.5, cex.lab = 1.5, pch=20)
axis(1, at = seq(-0.4,0.4,0.1), labels = c(-0.4,"",-0.2,"",0,"",0.2,"",0.4))
abline(h=0)
set.seed(8535)
gender <- c(rep('male', 24), rep('female', 24))
outcome <- c(rep(c('promoted', 'not promoted'), c(21, 3)), rep(c('promoted', 'not promoted'), c(14, 10)))
nsim  = 100
n     = length(gender)
group = gender
var1  = outcome
success = "promoted"
sim   = matrix(NA, nrow = n, ncol = nsim)
n1    = n2 = 24
statistic <- function(var1, group){
t1 <- var1 == success & group == levels(as.factor(group))[1]
t2 <- var1 == success & group == levels(as.factor(group))[2]
sum(t1)/n1 - sum(t2)/n2
}
for(i in 1:nsim){
sim[,i] = sample(group, n, replace = FALSE)
}
sim_dist = apply(sim, 2, statistic, var1 = outcome)
diffs    = sim_dist
pval     = sum(diffs >= 0.29) / nsim
values  <- table(sim_dist)
X <- c()
Y <- c()
for(i in 1:length(diffs)){
x   <- diffs[i]
rec <- sum(sim_dist == x)
X   <- append(X, rep(x, rec))
Y   <- append(Y, 1:rec)
}
plot(X, Y, xlim=range(diffs)+c(-1,1)*sd(diffs)/4, xlab = "Difference in promotion rates", ylab="",axes = FALSE, ylim=c(0,max(Y)), col=COL[1], cex = 1.5, cex.lab = 1.5, pch=20)
axis(1, at = seq(-0.4,0.4,0.1), labels = c(-0.4,"",-0.2,"",0,"",0.2,"",0.4))
abline(h=0)
set.seed(8535)
gender <- c(rep('male', 24), rep('female', 24))
outcome <- c(rep(c('promoted', 'not promoted'), c(21, 3)), rep(c('promoted', 'not promoted'), c(14, 10)))
nsim  = 100
n     = length(gender)
group = gender
var1  = outcome
success = "promoted"
sim   = matrix(NA, nrow = n, ncol = nsim)
n1    = n2 = 24
statistic <- function(var1, group){
t1 <- var1 == success & group == levels(as.factor(group))[1]
t2 <- var1 == success & group == levels(as.factor(group))[2]
sum(t1)/n1 - sum(t2)/n2
}
for(i in 1:nsim){
sim[,i] = sample(group, n, replace = FALSE)
}
sim_dist = apply(sim, 2, statistic, var1 = outcome)
diffs    = sim_dist
pval     = sum(diffs >= 0.29) / nsim
values  <- table(sim_dist)
X <- c()
Y <- c()
for(i in 1:length(diffs)){
x   <- diffs[i]
rec <- sum(sim_dist == x)
X   <- append(X, rep(x, rec))
Y   <- append(Y, 1:rec)
}
plot(X, Y, xlim=range(diffs)+c(-1,1)*sd(diffs)/4, xlab = "Difference in promotion rates", axes = FALSE, ylim=c(0,max(Y)), col=COL[1], cex=0.8, pch=20)
axis(1, at = seq(-0.4,0.4,0.1), labels = c(-0.4,"",-0.2,"",0,"",0.2,"",0.4))
abline(h=0)
