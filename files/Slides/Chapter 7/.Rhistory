pt100$carat = "pt100"
diamond = as.data.frame(rbind(pt99,pt100))
boxplot(diamond$ptprice ~ diamond$carat,xlab="", ylab="")
data(diamonds)
pt99 = diamonds[diamonds$carat == 0.99,]
pt99$ptprice = round(pt99$price / 99, 2)
pt99$carat = "pt99"
pt100_full = diamonds[diamonds$carat == 1, ]
set.seed(223)
rows_to_sample = sample(1: nrow(pt100_full), 30)
pt100 = pt100_full[rows_to_sample,]
pt100$ptprice = round(pt100$price / 100, 2)
pt100$carat = "pt100"
diamond = as.data.frame(rbind(pt99,pt100))
boxplot(diamond$ptprice ~ diamond$carat, names = c("carat = 1", "carat = 0.99"),xlab="", ylab="")
data(diamonds)
pt99 = diamonds[diamonds$carat == 0.99,]
pt99$ptprice = round(pt99$price / 99, 2)
pt99$carat = "pt99"
pt100_full = diamonds[diamonds$carat == 1, ]
set.seed(223)
rows_to_sample = sample(1: nrow(pt100_full), 30)
pt100 = pt100_full[rows_to_sample,]
pt100$ptprice = round(pt100$price / 100, 2)
pt100$carat = "pt100"
diamond = as.data.frame(rbind(pt99,pt100))
boxplot(diamond$ptprice ~ diamond$carat, names = c("carat = 1", "carat = 0.99"),xlab="", ylab="",cex.axis=2)
?boxplot
boxplot(diamond$ptprice ~ diamond$carat, names = c("carat = 1", "carat = 0.99"),xlab="", ylab="",cex.axis=2, outline = T)
data(diamonds)
pt99 = diamonds[diamonds$carat == 0.99,]
pt99$ptprice = round(pt99$price / 99, 2)
pt99$carat = "pt99"
pt100_full = diamonds[diamonds$carat == 1, ]
set.seed(223)
rows_to_sample = sample(1: nrow(pt100_full), 30)
pt100 = pt100_full[rows_to_sample,]
pt100$ptprice = round(pt100$price / 100, 2)
pt100$carat = "pt100"
diamond = as.data.frame(rbind(pt99,pt100))
boxplot(diamond$ptprice ~ diamond$carat, names = c("carat = 1", "carat = 0.99"),xlab="", ylab="",cex.axis=2, outline = T)
data(diamonds)
pt99 = diamonds[diamonds$carat == 0.99,]
pt99$ptprice = round(pt99$price / 99, 2)
pt99$carat = "pt99"
pt100_full = diamonds[diamonds$carat == 1, ]
set.seed(223)
rows_to_sample = sample(1: nrow(pt100_full), 30)
pt100 = pt100_full[rows_to_sample,]
pt100$ptprice = round(pt100$price / 100, 2)
pt100$carat = "pt100"
diamond = as.data.frame(rbind(pt99,pt100))
boxplot(diamond$ptprice ~ diamond$carat, names = c("carat = 1", "carat = 0.99"),xlab="", ylab="",cex.axis=2, outline = F)
data(diamonds)
pt99 = diamonds[diamonds$carat == 0.99,]
pt99$ptprice = round(pt99$price / 99, 2)
pt99$carat = "pt99"
pt100_full = diamonds[diamonds$carat == 1, ]
set.seed(223)
rows_to_sample = sample(1: nrow(pt100_full), 30)
pt100 = pt100_full[rows_to_sample,]
pt100$ptprice = round(pt100$price / 100, 2)
pt100$carat = "pt100"
diamond = as.data.frame(rbind(pt99,pt100))
boxplot(diamond$ptprice ~ diamond$carat, names = c("carat = 1", "carat = 0.99"),xlab="", ylab="",cex.axis=2, outline = F)
axis(2,at=round(c(min(diamond$ptprice), mean(diamond$ptprice), max(diamond$ptprice)),1),
labels = T)
data(diamonds)
pt99 = diamonds[diamonds$carat == 0.99,]
pt99$ptprice = round(pt99$price / 99, 2)
pt99$carat = "pt99"
pt100_full = diamonds[diamonds$carat == 1, ]
set.seed(223)
rows_to_sample = sample(1: nrow(pt100_full), 30)
pt100 = pt100_full[rows_to_sample,]
pt100$ptprice = round(pt100$price / 100, 2)
pt100$carat = "pt100"
diamond = as.data.frame(rbind(pt99,pt100))
boxplot(diamond$ptprice ~ diamond$carat, names = c("carat = 1", "carat = 0.99"),xlab="", ylab="",cex.axis=2, outline = F, ylim =c(0,100))
data(diamonds)
pt99 = diamonds[diamonds$carat == 0.99,]
pt99$ptprice = round(pt99$price / 99, 2)
pt99$carat = "pt99"
pt100_full = diamonds[diamonds$carat == 1, ]
set.seed(223)
rows_to_sample = sample(1: nrow(pt100_full), 30)
pt100 = pt100_full[rows_to_sample,]
pt100$ptprice = round(pt100$price / 100, 2)
pt100$carat = "pt100"
diamond = as.data.frame(rbind(pt99,pt100))
boxplot(diamond$ptprice ~ diamond$carat, names = c("carat = 1", "carat = 0.99"),xlab="", ylab="",cex.axis=2, outline = F, ylim =c(20,80))
data(diamonds)
pt99 = diamonds[diamonds$carat == 0.99,]
pt99$ptprice = round(pt99$price / 99, 2)
pt99$carat = "pt99"
pt100_full = diamonds[diamonds$carat == 1, ]
set.seed(223)
rows_to_sample = sample(1: nrow(pt100_full), 30)
pt100 = pt100_full[rows_to_sample,]
pt100$ptprice = round(pt100$price / 100, 2)
pt100$carat = "pt100"
diamond = as.data.frame(rbind(pt99,pt100))
boxplot(diamond$ptprice ~ diamond$carat, names = c("carat = 1", "carat = 0.99"),xlab="", ylab="",cex.axis=2, outline = F, ylim =seq(20,80,10))
data(diamonds)
pt99 = diamonds[diamonds$carat == 0.99,]
pt99$ptprice = round(pt99$price / 99, 2)
pt99$carat = "pt99"
pt100_full = diamonds[diamonds$carat == 1, ]
set.seed(223)
rows_to_sample = sample(1: nrow(pt100_full), 30)
pt100 = pt100_full[rows_to_sample,]
pt100$ptprice = round(pt100$price / 100, 2)
pt100$carat = "pt100"
diamond = as.data.frame(rbind(pt99,pt100))
boxplot(diamond$ptprice ~ diamond$carat, names = c("carat = 1", "carat = 0.99"),xlab="", ylab="",cex.axis=2, outline = F, ylim =c(20,80))
?t.test
library(readxl)
CAOS_Data <- read_excel("D:/A&T/GRA/CAOS_Data.xlsx")
View(CAOS_Data)
dat = CAOS_Data
library(tidyverse)
dat1 = dat %>%
filter(Question==1)
?t.test
t.test(Perc_of_correct~Test, data = dat1, paired = T)
View(dat1)
t.test(%_of_correct~Test, data = dat1, paired = T)
dat1 = dat %>%
filter(Question==1)%>%
rename(perc_correct = %_of_correct)
dat1 = dat %>%
filter(Question==1)%>%
rename(perc_correct = "%_of_correct")
t.test(perc_correct~Test, data = dat1, paired = T)
dat1 = dat %>%
filter(Question==1, Instructor != "O'Regan")%>%
rename(perc_correct = "%_of_correct")
t.test(perc_correct~Test, data = dat1, paired = T)
View(CAOS_Data)
dat %>%
rename(n_student = "#_of_Students", n_correct = "#_of_correct")%>%
group_by(Question, Test)%>%
summarise(n = sum(n_student), perc_correct = sum(n_correct)/n*100)
?spread
dat %>%
rename(n_student = "#_of_Students", n_correct = "#_of_correct")%>%
group_by(Question, Test)%>%
summarise(n = sum(n_student), perc_correct = sum(n_correct)/n*100)%>%
spread(key = Test, value = perc_correct)
dat %>%
rename(n_student = "#_of_Students", n_correct = "#_of_correct")%>%
group_by(Question, Test)%>%
summarise(n = sum(n_student), perc_correct = sum(n_correct)/n*100)%>%
spread(key = Test, value = c(perc_correct,n))
dat %>%
rename(n_student = "#_of_Students", n_correct = "#_of_correct")%>%
group_by(Question, Test)%>%
summarise(n = sum(n_student), perc_correct = sum(n_correct)/n*100)%>%
spread(key = Test, value = n)
dat %>%
rename(n_student = "#_of_Students", n_correct = "#_of_correct")%>%
group_by(Question, Test)%>%
summarise(n = sum(n_student), perc_correct = sum(n_correct)/n*100)%>%
spread(key = Test, value = n,drop=T)
dat %>%
rename(n_student = "#_of_Students", n_correct = "#_of_correct")%>%
group_by(Question, Test)%>%
summarise(n = sum(n_student), perc_correct = sum(n_correct)/n*100)
dat %>%
rename(n_student = "#_of_Students", n_correct = "#_of_correct")%>%
group_by(Question, Test)%>%
summarise(n = sum(n_student), perc_correct = sum(n_correct)/n*100)%>%
gather(key = key, value = value, c(n, perc_correct))
dat %>%
rename(n_student = "#_of_Students", n_correct = "#_of_correct")%>%
group_by(Question, Test)%>%
summarise(n = sum(n_student), perc_correct = sum(n_correct)/n*100)%>%
gather(key = key, value = value, c(n, perc_correct))
dat %>%
rename(n_student = "#_of_Students", n_correct = "#_of_correct")%>%
group_by(Question, Test)%>%
summarise(n = sum(n_student), perc_correct = sum(n_correct)/n*100)
dat %>%
rename(n_student = "#_of_Students", n_correct = "#_of_correct")%>%
group_by(Question, Test)%>%
summarise(n = sum(n_student), perc_correct = sum(n_correct)/n*100)%>%
gather(key = key, value = value, c(n, perc_correct))
dat %>%
rename(n_student = "#_of_Students", n_correct = "#_of_correct")%>%
group_by(Question, Test)%>%
summarise(n = sum(n_student), perc_correct = sum(n_correct)/n*100)%>%
gather(key = key, value = value, c(n, perc_correct))%>%
tail(10)
?unite
dat %>%
rename(n_student = "#_of_Students", n_correct = "#_of_correct")%>%
group_by(Question, Test)%>%
summarise(n = sum(n_student), perc_correct = sum(n_correct)/n*100)%>%
gather(key = key, value = value, c(n, perc_correct))%>%
unite(col = "x", key, value)
dat %>%
rename(n_student = "#_of_Students", n_correct = "#_of_correct")%>%
group_by(Question, Test)%>%
summarise(n = sum(n_student), perc_correct = sum(n_correct)/n*100)%>%
gather(key = key, value = value, c(n, perc_correct))%>%
unite(col = "x", key, value)%>%
spread(Test,x)
dat %>%
rename(n_student = "#_of_Students", n_correct = "#_of_correct")%>%
group_by(Question, Test)%>%
summarise(n = sum(n_student), perc_correct = sum(n_correct)/n*100)%>%
gather(key = key, value = value, c(n, perc_correct))%>%
unite(col = "x", key, value)%>%
spread(key = Test, value = x)
dat %>%
rename(n_student = "#_of_Students", n_correct = "#_of_correct")%>%
group_by(Question, Test)%>%
summarise(n = sum(n_student), perc_correct = sum(n_correct)/n*100)%>%
gather(key = key, value = value, c(n, perc_correct))%>%
unite(col = "x", key, value)
dat %>%
rename(n_student = "#_of_Students", n_correct = "#_of_correct")%>%
group_by(Question, Test)%>%
summarise(n = sum(n_student), perc_correct = sum(n_correct)/n*100)%>%
gather(key = key, value = value, c(n, perc_correct))
dat %>%
rename(n_student = "#_of_Students", n_correct = "#_of_correct")%>%
group_by(Question, Test)%>%
summarise(n = sum(n_student), perc_correct = sum(n_correct)/n*100)%>%
gather(key = key, value = value, c(n, perc_correct))%>%
unite(col = "x", Test, key)
dat %>%
rename(n_student = "#_of_Students", n_correct = "#_of_correct")%>%
group_by(Question, Test)%>%
summarise(n = sum(n_student), perc_correct = sum(n_correct)/n*100)%>%
gather(key = key, value = value, c(n, perc_correct))%>%
unite(col = "x", Test, key)%>%
spread(key = x, value = value)
perc_tab = dat %>%
rename(n_student = "#_of_Students", n_correct = "#_of_correct")%>%
group_by(Question, Test)%>%
summarise(n = sum(n_student), perc_correct = sum(n_correct)/n*100)%>%
gather(key = key, value = value, c(n, perc_correct))%>%
unite(col = "x", Test, key)%>%
spread(key = x, value = value)
View(perc_tab)
perc_tab = dat %>%
rename(n_student = "#_of_Students", n_correct = "#_of_correct")%>%
group_by(Question, Test)%>%
summarise(n = sum(n_student), perc_correct = sum(n_correct)/n*100)%>%
gather(key = key, value = value, c(n, perc_correct))%>%
unite(col = "x", Test, key)%>%
spread(key = x, value = value)%>%
select(Question, Pre_n, Pre_perc_correct,Post_n, Post_perc_correct)
perc_tab%>%
gather(key = "Test", value = "perc_correct", c(Pre_perc_correct, Post_perc_correct))
perc_tab%>%
gather(key = "Test", value = "perc_correct", c(Pre_perc_correct, Post_perc_correct))%>%
ggplot(aes(x = Question ,y = perc_correct, col = Test))+
geom_line()
perc_tab1 = perc_tab%>%
mutate(diff = Post_perc_correct - Pre_perc_correct)
View(perc_tab1)
hist(perc_tab1$diff)
mean(perc_tab1$diff)
summary(perc_tab1$diff)
source("D:/A&T/GRA/CAOS_tables.R")
pt(q = -2.508, df = 22)
plot(c(-4, 4), c(0, dnorm(0)), type='n', axes=FALSE, ylab = "", xlab = "")
axis(1, at = c(-5,-1.72, 0, 1.72, 5), labels = c(NA, NA, 0, NA, NA))
abline(h=0)
X <- seq(-8, 8, 0.01)
Y <- dt(X, 9)
lines(X, Y)
these <- which(X < -1.72)
yy <- c(0, Y[these], 0)
these <- c(these[1], these, rev(these)[1])
xx <- X[these]
polygon(xx, yy, col=COL[1])
these <- which(X > 1.72)
yy <- c(0, Y[these], 0)
these <- c(these[1], these, rev(these)[1])
xx <- X[these]
polygon(xx, yy, col=COL[1])
text(0,0.6*max(Y), "90%", col = "red", cex = 0.9)
text(2,0.05*max(Y), "5%", col = "red", cex = 0.8)
text(-2,0.05*max(Y), "5%", col = "red", cex = 0.8)
plot(c(-4, 4), c(0, dnorm(0)), type='n', axes=FALSE, ylab = "", xlab = "")
axis(1, at = c(-5,-1.72, 0, 1.72, 5), labels = c(NA, NA, 0, NA, NA))
abline(h=0)
X <- seq(-8, 8, 0.01)
Y <- dt(X, 9)
lines(X, Y)
these <- which(X < -1.72)
yy <- c(0, Y[these], 0)
these <- c(these[1], these, rev(these)[1])
xx <- X[these]
polygon(xx, yy, col=COL[1])
these <- which(X > 1.72)
yy <- c(0, Y[these], 0)
these <- c(these[1], these, rev(these)[1])
xx <- X[these]
polygon(xx, yy, col=COL[1])
text(0,0.6*max(Y), "90%", col = "red", cex = 1.5)
text(2,0.05*max(Y), "5%", col = "red", cex = 1)
text(-2,0.05*max(Y), "5%", col = "red", cex = 1)
qt(p = 0.95, df = 22)
![](power_null_B_0_1-7_with_rejection_region.pdf){height="50%"}
install.packages("xtable")
library(readr)
library(openintro)
library(here)
library(tidyverse)
library(xtable)
data(COL)
aldrin = read.csv("aldrin.csv", header = T)
aldrin = read_xls("aldrin.xls", header = T)
aldrin = read_xls("aldrin.xls")
# dotplot
par(mar=c(2,4.1,0,0), las=1, mgp=c(3,0.7,0), mfrow = c(3,1), cex.lab = 1.25, cex.axis = 1.25)
dotPlot(aldrin$aldrin[aldrin$depth == "bottom"], xlim = c(3,9), axes = FALSE, col = COL[1,2], xlab = "", ylab = "bottom")
dotPlot(aldrin$aldrin[aldrin$depth == "middepth"], xlim = c(3,9), axes = FALSE, col = COL[1,2], xlab = "", ylab = "middepth")
dotPlot(aldrin$aldrin[aldrin$depth == "surface"], xlim = c(3,9), col = COL[1,2], ylab = "surface")
aldrin = read_xls("aldrin.xls")
# dotplot
par(mar=c(2,4.1,0,0), las=1, mgp=c(3,0.7,0), mfrow = c(3,1), cex.lab = 1.25, cex.axis = 2)
dotPlot(aldrin$aldrin[aldrin$depth == "bottom"], xlim = c(3,9), axes = FALSE, col = COL[1,2], xlab = "", ylab = "bottom")
dotPlot(aldrin$aldrin[aldrin$depth == "middepth"], xlim = c(3,9), axes = FALSE, col = COL[1,2], xlab = "", ylab = "middepth")
dotPlot(aldrin$aldrin[aldrin$depth == "surface"], xlim = c(3,9), col = COL[1,2], ylab = "surface")
aldrin = read_xls("aldrin.xls")
# dotplot
par(mar=c(2,4.1,0,0), las=1, mgp=c(3,0.7,0), mfrow = c(3,1), cex.lab = 2, cex.axis = 2)
dotPlot(aldrin$aldrin[aldrin$depth == "bottom"], xlim = c(3,9), axes = FALSE, col = COL[1,2], xlab = "", ylab = "bottom")
dotPlot(aldrin$aldrin[aldrin$depth == "middepth"], xlim = c(3,9), axes = FALSE, col = COL[1,2], xlab = "", ylab = "middepth")
dotPlot(aldrin$aldrin[aldrin$depth == "surface"], xlim = c(3,9), col = COL[1,2], ylab = "surface")
aldrin = read_xls("aldrin.xls")
# dotplot
par(mar=c(2,4.1,0,0), las=1, mgp=c(3,0.7,0), mfrow = c(3,1), cex.lab = 1.8, cex.axis = 2)
dotPlot(aldrin$aldrin[aldrin$depth == "bottom"], xlim = c(3,9), axes = FALSE, col = COL[1,2], xlab = "", ylab = "bottom")
dotPlot(aldrin$aldrin[aldrin$depth == "middepth"], xlim = c(3,9), axes = FALSE, col = COL[1,2], xlab = "", ylab = "middepth")
dotPlot(aldrin$aldrin[aldrin$depth == "surface"], xlim = c(3,9), col = COL[1,2], ylab = "surface")
aldrin = read_xls("aldrin.xls")
# dotplot
par(mar=c(2,4.1,0,0), las=1, mgp=c(3,0.7,0), mfrow = c(3,1), cex.lab = 1.8, cex.axis = 2)
dotPlot(aldrin$aldrin[aldrin$depth == "bottom"], xlim = c(3,9), axes = FALSE, col = COL[1,2], xlab = "", ylab = "bottom", cex = 2)
dotPlot(aldrin$aldrin[aldrin$depth == "middepth"], xlim = c(3,9), axes = FALSE, col = COL[1,2], xlab = "", ylab = "middepth")
dotPlot(aldrin$aldrin[aldrin$depth == "surface"], xlim = c(3,9), col = COL[1,2], ylab = "surface")
aldrin = read_xls("aldrin.xls")
# dotplot
par(mar=c(2,4.1,0,0), las=1, mgp=c(3,0.7,0), mfrow = c(3,1), cex.lab = 1.8, cex.axis = 2)
dotPlot(aldrin$aldrin[aldrin$depth == "bottom"], xlim = c(3,9), axes = FALSE, col = COL[1,2], xlab = "", ylab = "bottom", cex = 3)
dotPlot(aldrin$aldrin[aldrin$depth == "middepth"], xlim = c(3,9), axes = FALSE, col = COL[1,2], xlab = "", ylab = "middepth")
dotPlot(aldrin$aldrin[aldrin$depth == "surface"], xlim = c(3,9), col = COL[1,2], ylab = "surface")
aldrin = read_xls("aldrin.xls")
# dotplot
par(mar=c(2,4.1,0,0), las=1, mgp=c(3,0.7,0), mfrow = c(3,1), cex.lab = 1.8, cex.axis = 2)
dotPlot(aldrin$aldrin[aldrin$depth == "bottom"], xlim = c(3,9), axes = FALSE, col = COL[1,2], xlab = "", ylab = "bottom", cex = 3)
dotPlot(aldrin$aldrin[aldrin$depth == "middepth"], xlim = c(3,9), axes = FALSE, col = COL[1,2], xlab = "", ylab = "middepth", cex = 3)
dotPlot(aldrin$aldrin[aldrin$depth == "surface"], xlim = c(3,9), col = COL[1,2], ylab = "surface", cex = 3)
aldrin = read_csv("aldrin.csv")
# dotplot
par(mar=c(2,4.1,0,0), las=1, mgp=c(3,0.7,0), mfrow = c(3,1), cex.lab = 1.8, cex.axis = 2)
dotPlot(aldrin$aldrin[aldrin$depth == "bottom"], xlim = c(3,9), axes = FALSE, col = COL[1,2], xlab = "", ylab = "bottom", cex = 3)
dotPlot(aldrin$aldrin[aldrin$depth == "middepth"], xlim = c(3,9), axes = FALSE, col = COL[1,2], xlab = "", ylab = "middepth", cex = 3)
dotPlot(aldrin$aldrin[aldrin$depth == "surface"], xlim = c(3,9), col = COL[1,2], ylab = "surface", cex = 3)
par(mar = c(0,0,0,0))
fTail(dfG = 2, dfE = 27, U = 6.14)
library(readr)
library(openintro)
library(here)
library(tidyverse)
library(xtable)
data(COL)
par(mar = c(0,0,0,0))
fTail(dfG = 2, dfE = 27, U = 6.14)
fTail(dfG = 2, dfE = 27, U = 6.14)
m = lm(aldrin ~ depth, data = aldrin)
xtable(anova(m))
par(mar=c(2,4,2,1), las=1, mgp=c(3,0.7,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(1,3))
hist(aldrin$aldrin[aldrin$depth == "bottom"], col = COL[1], main = "", ylab = "", axes = FALSE)
axis(1, at = c(3,5,7,9))
axis(2, at = c(0,1,2,3))
hist(aldrin$aldrin[aldrin$depth == "middepth"], col = COL[1], main = "", ylab = "", axes = FALSE)
axis(1, at = c(3,5,7))
axis(2, at = c(0,1,2))
hist(aldrin$aldrin[aldrin$depth == "surface"], col = COL[1], main = "", ylab = "", axes = FALSE, xlim = c(2.5,5.5))
axis(1, at = c(2.5,4,5.5))
axis(2, at = c(0,1,2,3,4))
par(mar = c(0,0,0,0))
fTail(dfG = 2, dfE = 27, U = 6.14)
ftail
library(openintro)
fTail(dfG = 2, dfE = 27, U = 6.14)
FTail <-
function(U=NULL, df_n=100, df_d = 100, curveColor=1, border=1, col="#569BBD", xlim=NULL, ylim=NULL, xlab='', ylab='', detail=999){
if(U <= 5){xlim <- c(0,5)}
if(U > 5){xlim <- c(0,U+0.01*U)}
temp <- diff(range(xlim))
x    <- seq(xlim[1] - temp/4, xlim[2] + temp/4, length.out=detail)
y    <- df(x, df_n, df_d)
ylim <- range(c(0,y))
plot(x, y, type='l', xlim=xlim, ylim=ylim, axes=FALSE, col=curveColor, xlab = "", ylab = "")
these <- (x >= U)
X <- c(x[these][1], x[these], rev(x[these])[1])
Y <- c(0, y[these], 0)
polygon(X, Y, border=border, col=col)
abline(h=0)
axis(1, at = c(0,U), label = c(NA,round(U,4)))
}
par(mar = c(0,0,0,0))
FTail(19,20,2, col = COL[1])
FTail <-
function(U=NULL, df_n=100, df_d = 100, curveColor=1, border=1, col="#569BBD", xlim=NULL, ylim=NULL, xlab='', ylab='', detail=999){
if(U <= 5){xlim <- c(0,5)}
if(U > 5){xlim <- c(0,U+0.01*U)}
temp <- diff(range(xlim))
x    <- seq(xlim[1] - temp/4, xlim[2] + temp/4, length.out=detail)
y    <- df(x, df_n, df_d)
ylim <- range(c(0,y))
plot(x, y, type='l', xlim=xlim, ylim=ylim, axes=FALSE, col=curveColor, xlab = "", ylab = "")
these <- (x >= U)
X <- c(x[these][1], x[these], rev(x[these])[1])
Y <- c(0, y[these], 0)
polygon(X, Y, border=border, col=col)
abline(h=0)
axis(1, at = c(0,U), label = c(NA,round(U,4)))
}
par(mar = c(0,0,0,0))
FTail(19,20,2, col = COL[1])
FTail <-
function(U=NULL, df_n=100, df_d = 100, curveColor=1, border=1, col="#569BBD", xlim=NULL, ylim=NULL, xlab='', ylab='', detail=999){
if(U <= 5){xlim <- c(0,5)}
if(U > 5){xlim <- c(0,U+0.01*U)}
temp <- diff(range(xlim))
x    <- seq(xlim[1] - temp/4, xlim[2] + temp/4, length.out=detail)
y    <- df(x, df_n, df_d)
ylim <- range(c(0,y))
plot(x, y, type='l', xlim=xlim, ylim=ylim, axes=FALSE, col=curveColor, xlab = "", ylab = "",lwd=2)
these <- (x >= U)
X <- c(x[these][1], x[these], rev(x[these])[1])
Y <- c(0, y[these], 0)
polygon(X, Y, border=border, col=col)
abline(h=0)
axis(1, at = c(0,U), label = c(NA,round(U,4)))
}
par(mar = c(0,0,0,0))
FTail(19,20,2, col = COL[1])
par(mar = c(0,0,0,0))
fTail(dfG = 2, dfE = 27, U = 6.14)
par(mar = c(0,0,0,0))
FTail(dfG = 2, dfE = 27, U = 6.14)
par(mar=c(2,4,2,1), las=1, mgp=c(3,0.7,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(1,3))
hist(aldrin$aldrin[aldrin$depth == "bottom"], col = COL[1], main = "", ylab = "", axes = FALSE)
axis(1, at = c(3,5,7,9))
axis(2, at = c(0,1,2,3))
hist(aldrin$aldrin[aldrin$depth == "middepth"], col = COL[1], main = "", ylab = "", axes = FALSE)
axis(1, at = c(3,5,7))
axis(2, at = c(0,1,2))
hist(aldrin$aldrin[aldrin$depth == "surface"], col = COL[1], main = "", ylab = "", axes = FALSE, xlim = c(2.5,5.5))
axis(1, at = c(2.5,4,5.5))
axis(2, at = c(0,1,2,3,4))
par(mar=c(2,4,2,1), las=1, mgp=c(3,0.7,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(1,3))
hist(aldrin$aldrin[aldrin$depth == "bottom"], col = COL[1], main = "", ylab = "", axes = FALSE)
axis(1, at = c(3,5,7,9))
axis(2, at = c(0,1,2,3))
hist(aldrin$aldrin[aldrin$depth == "middepth"], col = COL[1], main = "", ylab = "", axes = FALSE)
axis(1, at = c(3,5,7))
axis(2, at = c(0,1,2))
hist(aldrin$aldrin[aldrin$depth == "surface"], col = COL[1], main = "", ylab = "", axes = FALSE, xlim = c(2.5,5.5))
axis(1, at = c(2.5,4,5.5))
axis(2, at = c(0,1,2,3,4))
par(mar=c(2,4,2,1), las=1, mgp=c(3,0.7,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(1,3))
hist(aldrin$aldrin[aldrin$depth == "bottom"], col = COL[1], main = "", ylab = "", axes = FALSE)
axis(1, at = c(3,5,7,9))
axis(2, at = c(0,1,2,3))
hist(aldrin$aldrin[aldrin$depth == "middepth"], col = COL[1], main = "", ylab = "", axes = FALSE)
axis(1, at = c(3,5,7))
axis(2, at = c(0,1,2))
hist(aldrin$aldrin[aldrin$depth == "surface"], col = COL[1], main = "", ylab = "", axes = FALSE, xlim = c(2.5,5.5))
axis(1, at = c(2.5,4,5.5))
axis(2, at = c(0,1,2,3,4))
par(mar=c(2,4,2,1), las=1, mgp=c(3,0.7,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(1,3))
hist(aldrin$aldrin[aldrin$depth == "bottom"], col = COL[1], main = "", ylab = "", axes = FALSE)
axis(1, at = c(3,5,7,9))
axis(2, at = c(0,1,2,3))
hist(aldrin$aldrin[aldrin$depth == "middepth"], col = COL[1], main = "", ylab = "", axes = FALSE)
axis(1, at = c(3,5,7))
axis(2, at = c(0,1,2))
hist(aldrin$aldrin[aldrin$depth == "surface"], col = COL[1], main = "", ylab = "", axes = FALSE, xlim = c(2.5,5.5))
axis(1, at = c(2.5,4,5.5))
axis(2, at = c(0,1,2,3,4))
par(mar=c(3,3,2,1), las=1, mgp=c(3,1.9,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(1,1))
boxplot(aldrin$aldrin ~ aldrin$depth, names = c("bottom\nsd=1.58","middepth\nsd=1.10","surface\nsd=0.66"))
par(mar=c(3,3,2,1), las=1, mgp=c(3,1.9,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(1,1))
boxplot(aldrin$aldrin ~ aldrin$depth, names = c("bottom\nsd=1.58","middepth\nsd=1.10","surface\nsd=0.66"))
par(mar=c(3,3,2,1), las=1, mgp=c(3,1.9,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(1,1))
boxplot(aldrin$aldrin ~ aldrin$depth, names = c("bottom\nsd=1.58","middepth\nsd=1.10","surface\nsd=0.66"))
par(mar=c(2,4,2,1), las=1, mgp=c(3,0.7,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(1,3))
hist(aldrin$aldrin[aldrin$depth == "bottom"], col = COL[1], main = "", ylab = "", axes = FALSE, cex.axis = 2)
axis(1, at = c(3,5,7,9))
axis(2, at = c(0,1,2,3))
hist(aldrin$aldrin[aldrin$depth == "middepth"], col = COL[1], main = "", ylab = "", axes = FALSE,  cex.axis = 2)
axis(1, at = c(3,5,7))
axis(2, at = c(0,1,2))
hist(aldrin$aldrin[aldrin$depth == "surface"], col = COL[1], main = "", ylab = "", axes = FALSE, xlim = c(2.5,5.5), cex.axis = 2)
axis(1, at = c(2.5,4,5.5))
axis(2, at = c(0,1,2,3,4))
par(mar=c(3,3,2,1), las=1, mgp=c(3,1.9,0), cex.lab = 1.25, cex.axis = 2, mfrow = c(1,1))
boxplot(aldrin$aldrin ~ aldrin$depth, names = c("bottom\nsd=1.58","middepth\nsd=1.10","surface\nsd=0.66"))
par(mar=c(3,3,2,1), las=1, mgp=c(3,1.9,0), cex.lab = 1.25, cex.axis = 2, adj = -1, mfrow = c(1,1))
par(mar=c(3,3,2,1), las=1, mgp=c(3,1.9,0), cex.lab = 1.25, cex.axis = 1.5, mfrow = c(1,1))
boxplot(aldrin$aldrin ~ aldrin$depth, names = c("bottom\nsd=1.58","middepth\nsd=1.10","surface\nsd=0.66"))
