library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
hashA1 = "QlpoOTFBWSZTWdR/uIQAAbj/wP/+2AhQY3/wKQVOwL/n//BAAABBwAHWN3ZzWEkoCZR6g9T0yh6mgeoAHqGhp6jRkZPUzUCUTJKfqj1P1CDRoZANA0NMg0yaD1AaaBJJGgiejJpGEzSDQaaGgAaGgB6gJVJmptQGgaANAAyAAeoNAACOaGi6FihFCCvTXm6MasIsA7ujAjKFSpVkTF7k0R3zyOZANPMkjhavk9oBJIkY17vjqc+FzWWuetDCo1Rwy3Zc7PMLEnFnuQMKOw99CMbIEwAmSEmTAATshINLZmqZIJmewlXgAxaOZrbm0c9auT0HHI9frdTtbwFOZm8gGcxQSpKNect6aNnZcuiCHFwAQFChYUgCnBZiLpSKAQsEIBADVRkBhK41FYVAlFlYS3JhiFNEGjRJgHWIGnBdA0gFVU2fQCxrCPXqsyIHQK2V2/gWZzOsuHCQXscHhpUWwD0RyZ6rQ5X2kJE8p43F+hDN9Vv7TLJp1NDxX3N831JTaUE905KmwuVtI8iPjsn6XVKK0EItO8qh8z3JJosmCnImxPwF4KVEMmMETsaVMEENgeBAxBA6oWyEKStF9066Dvjuc6T3p0ltEmFZ6rBmasqGv+iwoPuUkcpXY2gqCymC9EFc8qJQUcZYa+9OJh0vpmgMtGUk+SmVIhDVC78m50iIUO4sFEVL85Uo5Lej++2G/xdyRThQkNR/uIQ="
hashA2 = "QlpoOTFBWSZTWZqq9UgAAbr/wP/+2AhQY3/wLQVOwL/n//BAAABBwAH2rd2OtYSUjSaYmQmMoYIZNDQyNNBo0GjCbKBKJkJqnpG1PSAAABoAAAPUAASJKelNNHqNGQ09Ro0A0AAAAeoDQEqp6jyjQNAA0AAABk2oAAAI/dHdSySKEFau/iuOPBbYMwDu6MCMqFyl3dX2xBOl91uyQ0A7dIIwsxcNcgSRZazrvj6ROxF682C61RLfOp8RcimGJntCrewtgdRJ0lK1CxUBFQBGkkWxoITSAIYkg8HpbsAjKZNiWLRAuGWRlTNJ3vTle1LyyONhyNTuSIDj1sZIAxz0pV0lUT77ceSzKc5+0wUAah0eEJ8AlahAhQwtSVgMAMqAjECYhSMqdc4gLfqjGMngRUSONRgLzxmBfZtwTwDSb5Aq6BzRUbn0fSB0DuYUXrq1ubFqz5ylT05n2TqCsEDzDDswm4MTzIyMapYXF+g/Z1ZXrDF4zxb25cjPi0o7e6Y3TUTKFMtjirJHwU+uoqC0QIqg0WnEr71M4STowVXcCd+dReC4qBplVEaiVyUrFqYEmpSi+K4DUlIuFyOqhrfW9jUcsZEW0owkb91lvdkYKzOLCSfNVSOla5RmhohWihlyD8sohQEmTZUzK2RiMcg1Y3Vgr4Ke12xAkPhEFG2ziSIRPnErpNBjHpTCWqfrD/Vsf+LuSKcKEhNVXqkA"
dat = tibble(Student = c("A_1", "A_2"), ID = c(100, 200), hash = c(hashA1, hashA2))
dat
learnrhash::decode_obj(hashA2)
learnrhash::decode_obj(hashA2)%>%
count(correct)%>%
filter(label != "Student-Name")%>%
mutate(perc = n/sum(n)*100)%>%
filter(correct == "TRUE")
learnrhash::decode_obj(hashA2)%>%
count(correct)%>%
filter(label != "Student-Name")
learnrhash::extract_questions(dat, hash)
learnrhash::extract_exercises(dat, hash)
hashA2
learnrhash::decode_obj(hashA2)%>%
filter(label != "Student-Name")%>%
count(correct)%>%
mutate(perc = n/sum(n)*100)%>%
filter(correct == "TRUE")
learnrhash::decode_obj(hashA2)%>%
filter(label != "Student-Name")
learnrhash::decode_obj(hashA2)%>%
filter(label != "Student-Name")%>%
count(correct)
learnrhash::decode_obj(hashA2)%>%
filter(label != "Student-Name")%>%
count(correct)%>%
mutate(perc = n/sum(n)*100)%>%
learnrhash::decode_obj(hashA2)%>%
filter(label != "Student-Name")%>%
count(correct)%>%
mutate(perc = n/sum(n)*100)
learnrhash::decode_obj(hashA2)%>%
filter(label != "Student-Name")%>%
count(correct)%>%
mutate(perc = n/sum(n)*100)
learnrhash::decode_obj(hashA2)%>%
filter(label != "Student-Name")%>%
count(correct)%>%
mutate(perc = n/sum(n)*100)%>%
filter(correct == "TRUE")
learnrhash::decode_obj(hashA2)%>%
filter(label != "Student-Name")
learnrhash::decode_obj(hashA2)%>%
filter(label != "Student-Name")%>%
summarise(score = sum(correct))
learnrhash::decode_obj(hashA2)%>%
filter(label != "Student-Name")%>%
summarise(score = sum(correct)/nrow())
learnrhash::decode_obj(hashA2)%>%
filter(label != "Student-Name")%>%
summarise(score = mean(correct)*100)
dat%>%
group_by(Student)%>%
learnrhash::decode_obj(hash)%>%
filter(label != "Student-Name")%>%
summarise(score = mean(correct)*100)
dat%>%
group_by(Student)%>%
learnrhash::decode_obj(hash)%>%
filter(label != "Student-Name")%>%
group_by(Student)%>%
summarise(score = mean(correct)*100)
View(dat)
learnhash_scoring = function(dat, i){
learnrhash::decode_obj(dat$hash[i])%>%
filter(label != "Student-Name")%>%
group_by(Student)%>%
summarise(score = mean(correct)*100)
}
learnhash_scoring(dat, 1:nrow(dat))
learnrhash::decode_obj(dat$hash[1])
learnhash_scoring(dat, 1:nrow(dat))
sapply(1:2, learnhash_scoring(dat))
sapply(learnhash_scoring, dat, 1:2)
learnhash_scoring = function(dat, i){
learnrhash::decode_obj(dat$hash[i])%>%
filter(label != "Student-Name")%>%
summarise(score = mean(correct)*100)
}
sapply(learnhash_scoring, dat, 1:2)
learnrhash::decode_obj(dat$hash[1])
x = learnrhash::decode_obj(dat$hash[1])
x$answer
library(dplyr)
library(ggplot2)
library(learnr)
library(gradethis) #remotes::install_github("rstudio/gradethis")
library(learnrhash) #devtools::install_github("rundel/learnrhash")
set.seed(241)
tutorial_options(exercise.timelimit = 60, exercise.checker = gradethis::grade_learnr)
diamonds <- diamonds
diamonds <- data.frame(diamonds)
diamonds$region <- sample(c(1,2,3,4,5), prob = c( 0.11, .02 , 0.65, 0.20, .02), nrow(diamonds), replace = TRUE)
diamonds$region <- as.factor(diamonds$region)
samples <- data.frame(Sample_One = diamonds$carat[sample(1:nrow(diamonds), 8, replace = FALSE)], Sample_Two = diamonds$carat[sample(1:nrow(diamonds), 8, replace = FALSE)], Sample_Three = c(diamonds$carat[sample(1:nrow(diamonds), 7, replace = FALSE)], 5))
cut.samples <- data.frame(Sample_One = diamonds$cut[sample(1:nrow(diamonds), 8, replace = FALSE)], Sample_Two = diamonds$cut[sample(1:nrow(diamonds), 8, replace = FALSE)], Sample_Three = diamonds$cut[sample(1:nrow(diamonds), 8, replace = FALSE)])
ggplot(data = cut.samples) + geom_bar(mapping = aes(x = Sample_Three)) + labs(title = "Distribution of cut type in Diamonds (samp)", x = "Cut Type")
ggplot(data = diamonds) + geom_bar(mapping = aes(x = cut)) + labs(title = "Distribution of cut type in Diamonds (pop)", x = "Cut Type")
ggplot(data = cut.samples) + geom_bar(mapping = aes(x = Sample_Three, y = (..count..)/sum(..count..))) + ylab("proportion") + labs(title = "Distribution of cut type in Diamonds (samp)", x = "Cut Type")
ggplot(data = diamonds) + geom_bar(mapping = aes(x = cut, y = (..count..)/sum(..count..))) + ylab("proportion") + labs(title = "Distribution of cut type in Diamonds (pop)", x = "Cut Type")
