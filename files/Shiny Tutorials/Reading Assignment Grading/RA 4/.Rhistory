}
else{
if(i %in% c(100)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
if(i %in% c(100)){#3
hash = sub("\\.*</p></div>", "", sub(".*\\=\"0\">", "", r_line[7]))
}
if(i %in% c(100)){
hash = sub("\\.*<p>", "", sub(".*\\</p>", "", r_line[7]))
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
x1 = file(listfile[14],"r")
readLines(x1)
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
listfile
dat = c()
x1 = file(listfile[14],"r")
readLines(x1)
n = length(listfile)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(100)){#9 #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(100)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
if(i %in% c(100)){#3
hash = sub("\\.*</p></div>", "", sub(".*\\=\"0\">", "", r_line[7]))
}
if(i %in% c(100)){
hash = sub("\\.*<p>", "", sub(".*\\</p>", "", r_line[7]))
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
x1 = file(listfile[14],"r")
readLines(x1)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
listfile
dat = c()
x1 = file(listfile[14],"r")
readLines(x1)
n = length(listfile)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(100)){#9 #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(14, 17, 18)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
if(i %in% c(100)){#3
hash = sub("\\.*</p></div>", "", sub(".*\\=\"0\">", "", r_line[7]))
}
if(i %in% c(100)){
hash = sub("\\.*<p>", "", sub(".*\\</p>", "", r_line[7]))
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
listfile
dat = c()
x1 = file(listfile[14],"r")
readLines(x1)
n = length(listfile)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(9)){#9 #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(14, 17, 18)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
if(i %in% c(3)){#3
hash = sub("\\.*</p></div>", "", sub(".*\\=\"0\">", "", r_line[7]))
}
if(i %in% c(100)){
hash = sub("\\.*<p>", "", sub(".*\\</p>", "", r_line[7]))
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
dat[6,2] = "QlpoOTFBWSZTWW79/70ABB//wf/3/rhQb3/yu+F+UL/n/+FAAAAIAAHQBH6tNnLq5LR24lzhJITRAYgSbTEajCZqZNADJtIGho0ek2ibFAyIaNRolP1J6ambVPU9R6geo0NNAA0AeoAADQGQkyptlIaaGgaPUABoyZAAAAAAAcZME0MhkZGTQ0AaDIwgGg0aZDENABIkRpNMiaaNTYiAABpk0DQAANBoD1BVqUYZiNl5CjY0lA6lfjpMkhvYiqSAONobIbbfFZmXZXcfZoN3zfvyO6rdNkOtlUppTwSLnU1oEjtsX88OvJIEi9pZ8RrmX5xLTSC+n42tiYhgORLddbpVh2YfrtxnbJXGdtD6F0ssdsk2IRhUA7ZGVCSmhAmJAsDQNgJshNISU2IQG38WIh72PlQSZ2nDKkCKNAjxSSy5pbCEZ/3hS0GjYZVCoutJ+xTlx8uUe5su/sx2Yve0YSZat1K5jVEC38SK4so8YgCwZRz4n8CJ8hKQcRm0zmFZVM5E7jzSbpArC+39q2O98rWDo19uSpbDr+WhORCiCVCdOroIM+0oSSERWxWZpnSJWYugs7OgXh4IIwJpIqonWmZIyDGkJBw+DTaYCcCqogYq91JHwNR9GSAMoLQjM2citj4SDMrDYNiHYQRmIIgQpBCGM5JE69dGOum+60VeHTlvQi1CPWhDQjsVIRbK1jd763YvJIRkQTRrYAm53iQQ99BMmmGFgpKFikiyIgVcgQMoRJXTIoBa4snXRu60UnhhCIsrmgvBchtgHCT0/T2mWFRv4hDZ3b3h6adazMzVc4kPQjl1SaF42DjyboEzSZtDl6zhilEyb3FVT1na8ViWYaAdE45MlquZrUM29Mk0ZEEFe8IuLasdRXup6h8VyN/IMq4rgumjhISNu0MAMPhTOmYuCuuIIUrdogb40vlE1SOVG06Szz1iCGTMMpTBzUJDlr21Ia7YTalxRUpsIZxltYcqUrDqyC86chOkXVOS7HfJD3GxRgA2JMFC+IpVJ+kjn6ZcebovBxYOScsXqQGQpVgkcl26NOrv/FrAFcO3GlWH4QnbbYgSMnuWTdgrp3MrtgxFRPuuNW5pY8S9KKNykZrSTPxhX0q1BJVYJ86RQC30UQqclOjUYNekKFCIQ1hTEgPdJMY31ZSIl6RNUCcgF4CBNw4CWAmd5Q9CoRL2gDxGoVrAQODo0c21FY3wWXSQdOCkprDJUdSqBtFWbGPMS1w2QolRIyprm7hSUw3GUqskFGkGkG85iwUjK9GC5VCU5JYgW6X5VdpSnJS0HPnw3cAO4DDYtWLIuTviG5iAhDgKo3S+JxypewBoaDNSSmIkuY0xHmnMTKOuoGtYPx1kNDQ2kJFWAuCFUSyJkSL7pXENMVgtEwVmsxFKWtQurGD+wgmDTYVpkQWCJDJyPLEVYQ4uQlEQnTwkjfwvK/lcULuucYipimuims2ILgVDpAnrDa0IpHAleQnmCUaZV6yhAvsl2FsF09HyfP+ZAn+LuSKcKEg3fv/egA=="
score = c()
decode_obj(dat$hash[15])
for (i in 1:nrow(dat)) {
score[i] = learnrhash::decode_obj(dat$hash[i])%>%
filter(correct == "TRUE")%>%
summarise(score = round(n()/17*20,2))%>%
pull(score)
}
score
dat = cbind(dat, score)
dat = dat %>% select(Username, score)
dat
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
listfile
dat = c()
x1 = file(listfile[14],"r")
readLines(x1)
n = length(listfile)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(9)){#9 #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(14, 17, 18)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
if(i %in% c(3)){#3
hash = sub("\\.*</p></div>", "", sub(".*\\=\"0\">", "", r_line[7]))
}
if(i %in% c(100)){
hash = sub("\\.*<p>", "", sub(".*\\</p>", "", r_line[7]))
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
dat[6,2] = "QlpoOTFBWSZTWW79/70ABB//wf/3/rhQb3/yu+F+UL/n/+FAAAAIAAHQBH6tNnLq5LR24lzhJITRAYgSbTEajCZqZNADJtIGho0ek2ibFAyIaNRolP1J6ambVPU9R6geo0NNAA0AeoAADQGQkyptlIaaGgaPUABoyZAAAAAAAcZME0MhkZGTQ0AaDIwgGg0aZDENABIkRpNMiaaNTYiAABpk0DQAANBoD1BVqUYZiNl5CjY0lA6lfjpMkhvYiqSAONobIbbfFZmXZXcfZoN3zfvyO6rdNkOtlUppTwSLnU1oEjtsX88OvJIEi9pZ8RrmX5xLTSC+n42tiYhgORLddbpVh2YfrtxnbJXGdtD6F0ssdsk2IRhUA7ZGVCSmhAmJAsDQNgJshNISU2IQG38WIh72PlQSZ2nDKkCKNAjxSSy5pbCEZ/3hS0GjYZVCoutJ+xTlx8uUe5su/sx2Yve0YSZat1K5jVEC38SK4so8YgCwZRz4n8CJ8hKQcRm0zmFZVM5E7jzSbpArC+39q2O98rWDo19uSpbDr+WhORCiCVCdOroIM+0oSSERWxWZpnSJWYugs7OgXh4IIwJpIqonWmZIyDGkJBw+DTaYCcCqogYq91JHwNR9GSAMoLQjM2citj4SDMrDYNiHYQRmIIgQpBCGM5JE69dGOum+60VeHTlvQi1CPWhDQjsVIRbK1jd763YvJIRkQTRrYAm53iQQ99BMmmGFgpKFikiyIgVcgQMoRJXTIoBa4snXRu60UnhhCIsrmgvBchtgHCT0/T2mWFRv4hDZ3b3h6adazMzVc4kPQjl1SaF42DjyboEzSZtDl6zhilEyb3FVT1na8ViWYaAdE45MlquZrUM29Mk0ZEEFe8IuLasdRXup6h8VyN/IMq4rgumjhISNu0MAMPhTOmYuCuuIIUrdogb40vlE1SOVG06Szz1iCGTMMpTBzUJDlr21Ia7YTalxRUpsIZxltYcqUrDqyC86chOkXVOS7HfJD3GxRgA2JMFC+IpVJ+kjn6ZcebovBxYOScsXqQGQpVgkcl26NOrv/FrAFcO3GlWH4QnbbYgSMnuWTdgrp3MrtgxFRPuuNW5pY8S9KKNykZrSTPxhX0q1BJVYJ86RQC30UQqclOjUYNekKFCIQ1hTEgPdJMY31ZSIl6RNUCcgF4CBNw4CWAmd5Q9CoRL2gDxGoVrAQODo0c21FY3wWXSQdOCkprDJUdSqBtFWbGPMS1w2QolRIyprm7hSUw3GUqskFGkGkG85iwUjK9GC5VCU5JYgW6X5VdpSnJS0HPnw3cAO4DDYtWLIuTviG5iAhDgKo3S+JxypewBoaDNSSmIkuY0xHmnMTKOuoGtYPx1kNDQ2kJFWAuCFUSyJkSL7pXENMVgtEwVmsxFKWtQurGD+wgmDTYVpkQWCJDJyPLEVYQ4uQlEQnTwkjfwvK/lcULuucYipimuims2ILgVDpAnrDa0IpHAleQnmCUaZV6yhAvsl2FsF09HyfP+ZAn+LuSKcKEg3fv/egA=="
score = c()
decode_obj(dat$hash[15])
for (i in 1:nrow(dat)) {
score[i] = learnrhash::decode_obj(dat$hash[i])%>%
filter(correct == "TRUE")%>%
summarise(score = round(n()/17*20,2))%>%
pull(score)
}
score
dat = cbind(dat, score)
dat = dat %>% select(Username, score)
dat
RA4 <- read_csv("gc_MATH224007.202220_column_2022-01-23-19-53-03.csv")
RA4 = left_join(RA4, dat, by = "Username")
RA4 = RA4%>%
mutate(`(RA1) Reading Assignment #1 [Total Pts: 20 Score] |1672899` = score)%>%
select(-score)
write.csv(RA4, "MATH224007 Dr.Mostafa - RA4.csv", row.names = F)
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
listfile
dat = c()
n = length(listfile)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(9)){#9 #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(14, 17, 18)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
if(i %in% c(3)){#3
hash = sub("\\.*</p></div>", "", sub(".*\\=\"0\">", "", r_line[7]))
}
if(i %in% c(100)){
hash = sub("\\.*<p>", "", sub(".*\\</p>", "", r_line[7]))
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
listfile
dat = c()
n = length(listfile)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(9)){#9 #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(14, 17, 18)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
if(i %in% c(3)){#3
hash = sub("\\.*</p></div>", "", sub(".*\\=\"0\">", "", r_line[7]))
}
if(i %in% c(100)){
hash = sub("\\.*<p>", "", sub(".*\\</p>", "", r_line[7]))
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
View(dat)
x1 = file(listfile[5],"r")
readLines(x1)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(9)){#9 #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(14, 17, 18)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
if(i %in% c(5)){#5
hash = r_line[11]
}
if(i %in% c(3)){#3
hash = sub("\\.*</p></div>", "", sub(".*\\=\"0\">", "", r_line[7]))
}
if(i %in% c(100)){
hash = sub("\\.*<p>", "", sub(".*\\</p>", "", r_line[7]))
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
listfile
dat = c()
n = length(listfile)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(9)){#9 #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(14, 17, 18)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
if(i %in% c(5)){#5
hash = r_line[11]
}
if(i %in% c(3)){#3
hash = sub("\\.*</p></div>", "", sub(".*\\=\"0\">", "", r_line[7]))
}
if(i %in% c(100)){
hash = sub("\\.*<p>", "", sub(".*\\</p>", "", r_line[7]))
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
listfile
dat = c()
n = length(listfile)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(100)){#9 #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c()){#14, 17, 18
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
if(i %in% c(100)){#5
hash = r_line[11]
}
if(i %in% c(100)){#3
hash = sub("\\.*</p></div>", "", sub(".*\\=\"0\">", "", r_line[7]))
}
if(i %in% c(100)){
hash = sub("\\.*<p>", "", sub(".*\\</p>", "", r_line[7]))
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
listfile
dat = c()
n = length(listfile)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(100)){#9 #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c()){#14, 17, 18
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
if(i %in% c(100)){#5
hash = r_line[11]
}
if(i %in% c(3)){#3
hash = sub("\\.*</p></div>", "", sub(".*\\=\"0\">", "", r_line[7]))
}
if(i %in% c(100)){
hash = sub("\\.*<p>", "", sub(".*\\</p>", "", r_line[7]))
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
listfile
dat = c()
n = length(listfile)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(100)){#9 #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c()){#14, 17, 18
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
if(i %in% c(5)){#5
hash = r_line[11]
}
if(i %in% c(3)){#3
hash = sub("\\.*</p></div>", "", sub(".*\\=\"0\">", "", r_line[7]))
}
if(i %in% c(100)){
hash = sub("\\.*<p>", "", sub(".*\\</p>", "", r_line[7]))
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
x1 = file(listfile[7],"r")
readLines(x1)
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
listfile
dat = c()
x1 = file(listfile[7],"r")
readLines(x1)
n = length(listfile)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(10)){ #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(15, 18, 19)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
if(i %in% c(5)){#5
hash = r_line[11]
}
if(i %in% c(3)){#3
hash = sub("\\.*</p></div>", "", sub(".*\\=\"0\">", "", r_line[7]))
}
if(i %in% c(100)){
hash = sub("\\.*<p>", "", sub(".*\\</p>", "", r_line[7]))
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
dat[7,2] = "QlpoOTFBWSZTWW79/70ABB//wf/3/rhQb3/yu+F+UL/n/+FAAAAIAAHQBH6tNnLq5LR24lzhJITRAYgSbTEajCZqZNADJtIGho0ek2ibFAyIaNRolP1J6ambVPU9R6geo0NNAA0AeoAADQGQkyptlIaaGgaPUABoyZAAAAAAAcZME0MhkZGTQ0AaDIwgGg0aZDENABIkRpNMiaaNTYiAABpk0DQAANBoD1BVqUYZiNl5CjY0lA6lfjpMkhvYiqSAONobIbbfFZmXZXcfZoN3zfvyO6rdNkOtlUppTwSLnU1oEjtsX88OvJIEi9pZ8RrmX5xLTSC+n42tiYhgORLddbpVh2YfrtxnbJXGdtD6F0ssdsk2IRhUA7ZGVCSmhAmJAsDQNgJshNISU2IQG38WIh72PlQSZ2nDKkCKNAjxSSy5pbCEZ/3hS0GjYZVCoutJ+xTlx8uUe5su/sx2Yve0YSZat1K5jVEC38SK4so8YgCwZRz4n8CJ8hKQcRm0zmFZVM5E7jzSbpArC+39q2O98rWDo19uSpbDr+WhORCiCVCdOroIM+0oSSERWxWZpnSJWYugs7OgXh4IIwJpIqonWmZIyDGkJBw+DTaYCcCqogYq91JHwNR9GSAMoLQjM2citj4SDMrDYNiHYQRmIIgQpBCGM5JE69dGOum+60VeHTlvQi1CPWhDQjsVIRbK1jd763YvJIRkQTRrYAm53iQQ99BMmmGFgpKFikiyIgVcgQMoRJXTIoBa4snXRu60UnhhCIsrmgvBchtgHCT0/T2mWFRv4hDZ3b3h6adazMzVc4kPQjl1SaF42DjyboEzSZtDl6zhilEyb3FVT1na8ViWYaAdE45MlquZrUM29Mk0ZEEFe8IuLasdRXup6h8VyN/IMq4rgumjhISNu0MAMPhTOmYuCuuIIUrdogb40vlE1SOVG06Szz1iCGTMMpTBzUJDlr21Ia7YTalxRUpsIZxltYcqUrDqyC86chOkXVOS7HfJD3GxRgA2JMFC+IpVJ+kjn6ZcebovBxYOScsXqQGQpVgkcl26NOrv/FrAFcO3GlWH4QnbbYgSMnuWTdgrp3MrtgxFRPuuNW5pY8S9KKNykZrSTPxhX0q1BJVYJ86RQC30UQqclOjUYNekKFCIQ1hTEgPdJMY31ZSIl6RNUCcgF4CBNw4CWAmd5Q9CoRL2gDxGoVrAQODo0c21FY3wWXSQdOCkprDJUdSqBtFWbGPMS1w2QolRIyprm7hSUw3GUqskFGkGkG85iwUjK9GC5VCU5JYgW6X5VdpSnJS0HPnw3cAO4DDYtWLIuTviG5iAhDgKo3S+JxypewBoaDNSSmIkuY0xHmnMTKOuoGtYPx1kNDQ2kJFWAuCFUSyJkSL7pXENMVgtEwVmsxFKWtQurGD+wgmDTYVpkQWCJDJyPLEVYQ4uQlEQnTwkjfwvK/lcULuucYipimuims2ILgVDpAnrDa0IpHAleQnmCUaZV6yhAvsl2FsF09HyfP+ZAn+LuSKcKEg3fv/egA=="
score = c()
for (i in 1:nrow(dat)) {
score[i] = learnrhash::decode_obj(dat$hash[i])%>%
filter(correct == "TRUE")%>%
summarise(score = round(n()/17*20,2))%>%
pull(score)
}
score
dat = cbind(dat, score)
dat = dat %>% select(Username, score)
dat
RA4 <- read_csv("gc_MATH224007.202220_column_2022-01-23-19-53-03.csv")
RA4 = left_join(RA4, dat, by = "Username")
RA4 = RA4%>%
mutate(`(RA1) Reading Assignment #1 [Total Pts: 20 Score] |1672899` = score)%>%
select(-score)
write.csv(RA4, "MATH224007 Dr.Mostafa - RA4.csv", row.names = F)
