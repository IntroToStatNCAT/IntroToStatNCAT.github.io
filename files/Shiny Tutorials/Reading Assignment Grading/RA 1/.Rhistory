library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
dat = c()
n = length(listfile)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(4,10)){ #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
View(dat)
x1 = file(listfile[1],"r")
r_line = readLines(x1)
r_line
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
dat = c()
n = length(listfile)
x1 = file(listfile[1],"r")
r_line = readLines(x1)
r_line
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(4,10)){ #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(2)){
hash = sub("\\.*</pre>", "", sub(".*\\output\">", "", r_line[7])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
x1 = file(listfile[2],"r")
r_line = readLines(x1)
r_line
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
dat = c()
n = length(listfile)
x1 = file(listfile[2],"r")
r_line = readLines(x1)
r_line
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(4,10)){ #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(2)){
hash = sub("\\.*<br>", "", sub(".*\\output\">", "", r_line[7])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
x1 = file(listfile[2],"r")
r_line = readLines(x1)
r_line
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
dat = c()
n = length(listfile)
x1 = file(listfile[2],"r")
r_line = readLines(x1)
r_line
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(100)){ #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(2)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
dat
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
dat = c()
n = length(listfile)
x1 = file(listfile[2],"r")
r_line = readLines(x1)
r_line
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(8,10,11,12,20)){ #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(2)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
score = c()
for (i in 1:nrow(dat)) {
score[i] = learnrhash::decode_obj(dat$hash[i])%>%
filter(label != "Student-Name")%>%
summarise(score = mean(correct)*20)%>%
pull(score)
}
score
dat = cbind(dat, score)
dat = dat %>% select(Username, score)
dat
RA1 <- read_csv("gc_MATH224007.202220_fullgc_2022-01-23-19-43-36.csv")
RA1 = left_join(RA1, dat, by = "Username")
RA1 = RA1%>%
mutate(`(RA1) Reading Assignment #1 [Total Pts: 20 Score] |1672899` = score)%>%
select(-score)
View(RA1)
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
dat = c()
n = length(listfile)
x1 = file(listfile[2],"r")
r_line = readLines(x1)
r_line
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(8,10,11,12,20)){ #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(2)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
score = c()
for (i in 1:nrow(dat)) {
score[i] = learnrhash::decode_obj(dat$hash[i])%>%
filter(label != "Student-Name")%>%
summarise(score = mean(correct)*20)%>%
pull(score)
}
score
dat = cbind(dat, score)
dat = dat %>% select(Username, score)
dat
RA1 <- read_csv("gc_MATH224007.202220_fullgc_2022-01-23-19-43-36.csv")
RA1 = left_join(RA1, dat, by = "Username")
RA1 = RA1%>%
mutate(`(RA1) Reading Assignment #1 [Total Pts: 20 Score] |1672899` = score)%>%
select(-score)
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
dat = c()
n = length(listfile)
x1 = file(listfile[2],"r")
r_line = readLines(x1)
r_line
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(8,10,11,12,20)){ #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(2)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
score = c()
for (i in 1:nrow(dat)) {
score[i] = learnrhash::decode_obj(dat$hash[i])%>%
filter(label != "Student-Name")%>%
summarise(score = mean(correct)*20)%>%
pull(score)
}
score
dat = cbind(dat, score)
dat = dat %>% select(Username, score)
dat
RA1 <- read_csv("gc_MATH224007.202220_column_2022-01-23-19-53-03.csv")
RA1 = left_join(RA1, dat, by = "Username")
RA1 = RA1%>%
mutate(`(RA1) Reading Assignment #1 [Total Pts: 20 Score] |1672899` = score)%>%
select(-score)
View(RA1)
dat
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
dat = c()
n = length(listfile)
x1 = file(listfile[2],"r")
r_line = readLines(x1)
r_line
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(8,10,11,12,20)){ #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(2)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
x = learnrhash::decode_obj(dat$hash[14])
View(x)
x = learnrhash::decode_obj(dat$hash[1])
table(x$correct)/sum(table(x$correct))
0.7*20
x = learnrhash::decode_obj(dat$hash[11])
table(x$correct)/sum(table(x$correct))
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
dat = c()
n = length(listfile)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(8,10,11,12,20)){ #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(2)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
x = learnrhash::decode_obj(dat$hash[11])
score = c()
for (i in 1:nrow(dat)) {
score[i] = learnrhash::decode_obj(dat$hash[i])%>%
filter(label != "Student-Name")%>%
summarise(score = mean(correct)*20)%>%
pull(score)
}
score
dat = cbind(dat, score)
dat = dat %>% select(Username, score)
dat
RA1 <- read_csv("gc_MATH224007.202220_column_2022-01-23-19-53-03.csv")
RA1 = left_join(RA1, dat, by = "Username")
RA1 = RA1%>%
mutate(`(RA1) Reading Assignment #1 [Total Pts: 20 Score] |1672899` = score)%>%
select(-score)
write.csv(RA1, "MATH224001 Dr.Chen - RA1.csv", row.names = F)
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
dat = c()
n = length(listfile)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(8,10,11,12,20)){ #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(2)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
x = learnrhash::decode_obj(dat$hash[11])
score = c()
for (i in 1:nrow(dat)) {
score[i] = learnrhash::decode_obj(dat$hash[i])%>%
filter(label != "Student-Name")%>%
summarise(score = mean(correct)*20)%>%
pull(score)
}
score
dat = cbind(dat, score)
dat = dat %>% select(Username, score)
dat
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
dat = c()
n = length(listfile)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(8,10,11,12,20)){ #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(2)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
x = learnrhash::decode_obj(dat$hash[11])
score = c()
for (i in 1:nrow(dat)) {
score[i] = learnrhash::decode_obj(dat$hash[i])%>%
filter(correct == "TRUE")%>%
summarise(score = round(n()/10*20,2))%>%
pull(score)
}
score
dat = cbind(dat, score)
dat = dat %>% select(Username, score)
dat
View(x)
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
dat = c()
n = length(listfile)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(8,10,11,12,20)){ #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(2)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
score = c()
for (i in 1:nrow(dat)) {
score[i] = learnrhash::decode_obj(dat$hash[i])%>%
filter(correct == "TRUE")%>%
summarise(score = round(n()/10*20,2))%>%
pull(score)
}
score
dat = cbind(dat, score)
dat = dat %>% select(Username, score)
dat
RA1 <- read_csv("gc_MATH224007.202220_column_2022-01-23-19-53-03.csv")
RA1 = left_join(RA1, dat, by = "Username")
RA1 = RA1%>%
mutate(`(RA1) Reading Assignment #1 [Total Pts: 20 Score] |1672899` = score)%>%
select(-score)
write.csv(RA1, "MATH224007 Dr.Mostafa - RA1.csv", row.names = F)
