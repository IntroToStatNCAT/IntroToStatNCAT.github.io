x1 = file(listfile[2],"r")
r_line = readLines(x1)
r_line
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
listfile
dat = c()
n = length(listfile)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(2)){#2 #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(100)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
score = c()
for (i in 1:nrow(dat)) {
score[i] = learnrhash::decode_obj(dat$hash[i])%>%
filter(correct == "TRUE")%>%
summarise(score = round(n()/17*20,2))%>%
pull(score)
}
score
dat = cbind(dat, score)
dat = dat %>% select(Username, score)%>%mutate(score = ifelse(is.nan(score), 0, score))
dat
RA4 <- read_csv("gc_MATH224001.202220_column_2022-01-23-18-54-01.csv")
RA4 = left_join(RA4, dat, by = "Username")
RA4 = RA4%>%
mutate(`(RA1) Reading Assignment #1 [Total Pts: 20 Score] |1672899` = score)%>%
select(-score)
write.csv(RA4, "MATH224001 Dr.Chen - RA4.csv", row.names = F)
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
listfile
dat = c()
n = length(listfile)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(100)){#2 #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(100)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
View(dat)
dat = c()
n = length(listfile)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(9)){#2 #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(100)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
x1 = file(listfile[3],"r")
r_line = readLines(x1)
r_line
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
listfile
dat = c()
n = length(listfile)
x1 = file(listfile[3],"r")
r_line = readLines(x1)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(9)){#2 #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(3)){
hash = sub("\\.*</p></div>", "", sub(".*<div data-b-wrap=\"true\"><p data-b-index=\"0\">", "", r_line[7]))
}
if(i %in% c(100)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
listfile
dat = c()
n = length(listfile)
x1 = file(listfile[3],"r")
r_line = readLines(x1)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(9)){#2 #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(100)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
if(i %in% c(3)){
hash = sub("\\.*</p></div>", "", sub(".*<div data-b-wrap=\"true\"><p data-b-index=\"0\">", "", r_line[7]))
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
x1 = file(listfile[20],"r")
r_line = readLines(x1)
r_line
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
listfile
dat = c()
n = length(listfile)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(9)){#2 #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(20)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
if(i %in% c(3)){
hash = sub("\\.*</p></div>", "", sub(".*<div data-b-wrap=\"true\"><p data-b-index=\"0\">", "", r_line[7]))
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
score = c()
for (i in 1:nrow(dat)) {
score[i] = learnrhash::decode_obj(dat$hash[i])%>%
filter(correct == "TRUE")%>%
summarise(score = round(n()/13*20,2))%>%
pull(score)
}
score
dat = cbind(dat, score)
dat = dat %>% select(Username, score)%>%mutate(score = ifelse(is.nan(score), 0, score))
dat
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
listfile
dat = c()
n = length(listfile)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(9)){#2 #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(20)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
if(i %in% c(3)){
hash = sub("\\.*</p></div>", "", sub(".*<div data-b-wrap=\"true\"><p data-b-index=\"0\">", "", r_line[7]))
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
score = c()
decode_obj(dat$hash[1])
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
listfile
dat = c()
n = length(listfile)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(9)){#2 #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(20)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
if(i %in% c(3)){
hash = sub("\\.*</p></div>", "", sub(".*<div data-b-wrap=\"true\"><p data-b-index=\"0\">", "", r_line[7]))
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
score = c()
decode_obj(dat$hash[3])
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
listfile
dat = c()
n = length(listfile)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(9)){#2 #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(20)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
if(i %in% c(3)){
hash = sub("\\.*</p></div>", "", sub(".*<div data-b-wrap=\"true\"><p data-b-index=\"0\">", "", r_line[7]))
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
score = c()
decode_obj(dat$hash[3])
for (i in 1:nrow(dat)) {
score[i] = learnrhash::decode_obj(dat$hash[i])%>%
filter(correct == "TRUE")%>%
summarise(score = round(n()/13*20,2))%>%
pull(score)
}
score
dat = cbind(dat, score)
dat = dat %>% select(Username, score)%>%mutate(score = ifelse(is.nan(score), 0, score))
dat
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
listfile
dat = c()
n = length(listfile)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(9)){#2 #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(20)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
if(i %in% c(3)){
hash = sub("\\.*</p></div>", "", sub(".*<div data-b-wrap=\"true\"><p data-b-index=\"0\">", "", r_line[7]))
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
score = c()
decode_obj(dat$hash[8])
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
listfile
dat = c()
n = length(listfile)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(9)){#2 #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(20)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
if(i %in% c(3)){
hash = sub("\\.*</p></div>", "", sub(".*<div data-b-wrap=\"true\"><p data-b-index=\"0\">", "", r_line[7]))
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
score = c()
for (i in 1:nrow(dat)) {
score[i] = learnrhash::decode_obj(dat$hash[i])%>%
filter(correct == "TRUE")%>%
summarise(score = round(n()/13*20,2))%>%
pull(score)
}
score
dat = cbind(dat, score)
dat = dat %>% select(Username, score)%>%mutate(score = ifelse(is.nan(score), 0, score))
dat
RA6 <- read_csv("gc_MATH224001.202220_column_2022-01-23-18-54-01.csv")
RA6 = left_join(RA6, dat, by = "Username")
RA6 = RA6%>%
mutate(`(RA1) Reading Assignment #1 [Total Pts: 20 Score] |1672899` = score)%>%
select(-score)
write.csv(RA6, "MATH224001 Dr.Mostafa - RA6.csv", row.names = F)
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
listfile
dat = c()
n = length(listfile)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(9)){#2 #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(20)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
if(i %in% c(3)){
hash = sub("\\.*</p></div>", "", sub(".*<div data-b-wrap=\"true\"><p data-b-index=\"0\">", "", r_line[7]))
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
score = c()
for (i in 1:nrow(dat)) {
score[i] = learnrhash::decode_obj(dat$hash[i])%>%
filter(correct == "TRUE")%>%
summarise(score = round(n()/13*20,2))%>%
pull(score)
}
score
dat = cbind(dat, score)
dat = dat %>% select(Username, score)%>%mutate(score = ifelse(is.nan(score), 0, score))
dat
RA6 <- read_csv("gc_MATH224001.202220_column_2022-01-23-18-54-01.csv")
RA6 = left_join(RA6, dat, by = "Username")
RA6 = RA6%>%
mutate(`(RA1) Reading Assignment #1 [Total Pts: 20 Score] |1672899` = score)%>%
select(-score)
write.csv(RA6, "MATH224001 Dr.Mostafa - RA6.csv", row.names = F)
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
listfile <- list.files(pattern = "txt",full.names = T, recursive = TRUE)
listfile
dat = c()
n = length(listfile)
for(i in 1:n){
x1 = file(listfile[i],"r")
r_line = readLines(x1)
name = sub("\\).*", "", sub(".*\\(", "", r_line[1])) #Reads the first line
if (i %in% c(9)){#2 #For students that dont put the hash in the right spot
hash = r_line[10] #Reads the comments
}
else{
if(i %in% c(20)){
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[8])) #For submissions with weird inline code
}
else{
hash = sub("\\.*</pre>", "", sub(".*\\id=\"hash_output\">", "", r_line[7])) #Reads the submission
}
}
if(i %in% c(3)){
hash = sub("\\.*</p></div>", "", sub(".*<div data-b-wrap=\"true\"><p data-b-index=\"0\">", "", r_line[7]))
}
temp_dat = c(name, hash)
dat = rbind(dat, temp_dat)
}
row.names(dat) = NULL
colnames(dat) = c("Username","hash")
dat = as.data.frame(dat)
score = c()
for (i in 1:nrow(dat)) {
score[i] = learnrhash::decode_obj(dat$hash[i])%>%
filter(correct == "TRUE")%>%
summarise(score = round(n()/13*20,2))%>%
pull(score)
}
score
dat = cbind(dat, score)
dat = dat %>% select(Username, score)%>%mutate(score = ifelse(is.nan(score), 0, score))
dat
RA6 <- read_csv("gc_MATH224007.202220_column_2022-01-23-19-53-03.csv")
RA6 = left_join(RA6, dat, by = "Username")
RA6 = RA6%>%
mutate(`(RA1) Reading Assignment #1 [Total Pts: 20 Score] |1672899` = score)%>%
select(-score)
write.csv(RA6, "MATH224001 Dr.Mostafa - RA6.csv", row.names = F)
