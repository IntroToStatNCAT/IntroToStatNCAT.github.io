knitr::opts_chunk$set(eval = TRUE, results = FALSE, fig.show = "hide", message = FALSE)
set.seed(1234)
library(tidyverse)
library(openintro)
library(infer)
global_monitor <- tibble(
scientist_work = c(rep("Benefits", 80000), rep("Doesn't benefit", 20000))
)
ggplot(global_monitor, aes(x = scientist_work)) +
geom_bar() +
labs(
x = "", y = "",
title = "Do you believe that the work scientists do benefit people like you?"
) +
coord_flip()
global_monitor %>%
count(scientist_work) %>%
mutate(p = n /sum(n))
samp1 <- global_monitor %>%
sample_n(50)
samp1 %>%
count(scientist_work) %>%
mutate(p_hat = n /sum(n))
# For use inline below
samp1_p_hat <- samp1 %>%
count(scientist_work) %>%
mutate(p_hat = n /sum(n)) %>%
filter(scientist_work == "Doesn't benefit") %>%
pull(p_hat) %>%
round(2)
sample_props50 <- global_monitor %>%
rep_sample_n(size = 50, reps = 15000, replace = TRUE) %>%
count(scientist_work) %>%
mutate(p_hat = n /sum(n)) %>%
filter(scientist_work == "Doesn't benefit")
ggplot(data = sample_props50, aes(x = p_hat)) +
geom_histogram(binwidth = 0.02) +
labs(
x = "p_hat (Doesn't benefit)",
title = "Sampling distribution of p_hat",
subtitle = "Sample size = 50, Number of samples = 15000"
)
install.packages("infer")
?infer
library(infer)
gss
prop_test(gss,
college ~ NULL,
success = "degree",
p = .2,
z = TRUE)
library(tidyverse)
gss%>%
specify(formula = college ~ NULL)%>%
calculate(stat = "prop")
gss%>%
specify(formula = college ~ NULL, success = "degree")%>%
calculate(stat = "prop")
?calculate
gss%>%
specify(formula = college ~ NULL, success = "degree")%>%
calculate(stat = "z")
gss%>%
specify(formula = college ~ NULL, success = "degree")%>%
hypothesise(p = 0.2)%>%
calculate(stat = "z")
?hypothesise
gss%>%
specify(formula = college ~ NULL, success = "degree")%>%
hypothesise(p = 0.2, null = "point")%>%
calculate(stat = "z")
prop_test(gss,
college ~ NULL,
success = "degree",
p = .2,
z = TRUE)
gss%>%
specify(formula = college ~ NULL, success = "degree")%>%
hypothesise(p = 0.2, null = "point")%>%
calculate(stat = "z")
?specif
?specify
?calculate
?hypothesise
gss%>%
specify(formula = college ~ NULL, success = "degree")%>%
hypothesise(p = 0.2, null = "point")%>%
get_p_value(obs_stat = F_hat, direction = "greater")
gss%>%
specify(formula = college ~ NULL, success = "degree")%>%
hypothesise(p = 0.2, null = "point")%>%
get_p_value(direction = "greater")
gss%>%
specify(formula = college ~ NULL, success = "degree")%>%
hypothesise(p = 0.2, null = "point")%>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "z")%>%
get_p_value(direction = "greater")
gss%>%
specify(formula = college ~ NULL, success = "degree")%>%
hypothesise(p = 0.2, null = "point")%>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "z")%>%
get_p_value(obs_stat = "z", direction = "greater")
?generate
gss%>%
specify(formula = college ~ NULL, success = "degree")%>%
hypothesise(p = 0.2, null = "point")%>%
generate(reps = 1000, type = "draw") %>%
calculate(stat = "z")%>%
get_p_value(direction = "greater")
gss%>%
specify(formula = college ~ NULL, success = "degree")%>%
hypothesise(p = 0.2, null = "point")%>%
generate(reps = 1000, type = "draw") %>%
calculate(stat = "z")%>%
get_p_value(obs_stat = "z", direction = "greater")
gss%>%
specify(formula = college ~ NULL, success = "degree")%>%
hypothesise(p = 0.2, null = "point")%>%
generate(reps = 1000, type = "draw") %>%
calculate(stat = "z")%>%
get_p_value(obs_stat = stat, direction = "greater")
gss%>%
specify(formula = college ~ NULL, success = "degree")%>%
hypothesise(p = 0.2, null = "point")%>%
calculate(stat = "z")
gss%>%
specify(formula = college ~ NULL, success = "degree")%>%
hypothesise(p = 0.2, null = "point")%>%
generate(reps = 1000, type = "draw") %>%
calculate(stat = "z")%>%
get_p_value(obs_stat = Z_hat, direction = "greater")
gss%>%
specify(formula = college ~ NULL, success = "degree")%>%
hypothesise(p = 0.2, null = "point")%>%
generate(reps = 1000, type = "draw") %>%
calculate(stat = "z")
gss%>%
specify(formula = college ~ NULL, success = "degree")%>%
hypothesise(p = 0.2, null = "point")%>%
generate(reps = 1000, type = "draw") %>%
calculate(stat = "z")%>%
get_p_value(obs_stat = stat, direction = "greater")
gss%>%
specify(formula = college ~ NULL, success = "degree")%>%
hypothesise(p = 0.2, null = "point")%>%
generate(reps = 1000, type = "draw") %>%
calculate(stat = "z")%>%
get_p_value(obs_stat = as.numeric(stat), direction = "greater")
x = gss%>%
specify(formula = college ~ NULL, success = "degree")%>%
hypothesise(p = 0.2, null = "point")%>%
generate(reps = 1000, type = "draw") %>%
calculate(stat = "z")
View(x)
x %>%
get_p_value(obs_stat = as.numeric(stat), direction = "greater")
Z_hat <- gss %>%
specify(formula = college ~ NULL, success = "degree") %>%
calculate(stat = "z")
shinyApp(ui = ui, server = server)
library(shinyWidgets)
library(shinyWidgets)
library(shinyWidgets)
library(shiny); runApp('Testing.R')
runApp('Testing.R')
runApp('Testing.R')
runApp('Testing.R')
runApp('Testing.R')
runApp('Testing.R')
runApp('Testing.R')
