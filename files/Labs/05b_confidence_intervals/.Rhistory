library(tidyverse)
library(openintro)
library(infer)
us_adults <- tibble(
climate_change_affects = c(rep("Yes", 62000), rep("No", 38000))
)
ggplot(us_adults, aes(x = climate_change_affects)) +
geom_bar() +
labs(
x = "", y = "",
title = "Do you think climate change is affecting your local community?"
) +
coord_flip()
us_adults %>%
count(climate_change_affects) %>%
mutate(p = n /sum(n))
n <- 60
samp <- us_adults %>%
sample_n(size = n)
prop_test(samp,
climate_change_affects ~ NULL,
success = "Yes",
z = FALSE,
conf_int = TRUE,
conf_level = 0.95, correct = FALSE)
n <- 60
samp <- us_adults %>%
sample_n(size = n)
prop_test(samp,
climate_change_affects ~ NULL,
success = "Yes",
z = FALSE,
conf_int = TRUE,
conf_level = 0.95, correct = FALSE)
prop_test(samp,
climate_change_affects ~ NULL,
success = "Yes",
z = FALSE,
conf_int = TRUE,
conf_level = 0.95, correct = FALSE)
n <- 60
samp <- us_adults %>%
sample_n(size = n)
prop_test(samp,
climate_change_affects ~ NULL,
success = "Yes",
z = FALSE,
conf_int = TRUE,
conf_level = 0.95, correct = FALSE)
us_adults %>%
sample_n(size = 60) %>%
specify(response = climate_change_affects, success = "Yes") %>%
generate(100, type = "bootstrap")
us_adults %>%
sample_n(size = 60) %>%
specify(response = climate_change_affects, success = "Yes") %>%
generate(100, type = "bootstrap") %>%
calculate(stat = "prop") %>%
get_ci(level = 0.95)
us_adults %>%
sample_n(size = 60) %>%
specify(response = climate_change_affects, success = "Yes") %>%
generate(100, type = "bootstrap") %>%
calculate(stat = "prop")
us_adults %>%
sample_n(size = 60) %>%
specify(response = climate_change_affects, success = "Yes") %>%
generate(100, type = "bootstrap") %>%
calculate(stat = "prop") %>%
get_ci(level = 0.95)
ggplot(df_ci()) +
geom_segment(aes(x = x_lower, y = y_lower, xend = x_upper, yend = y_upper, color = capture_p)) +
geom_point(aes(x = x_lower, y = y_lower, color = capture_p)) +
geom_point(aes(x = x_upper, y = y_upper, color = capture_p)) +
geom_vline(xintercept = p(), color = "darkgray") +
labs(
y = "", x = "Bounds of the confidence interval",
color = "Does the interval capture the true population proportion?"
) +
theme(legend.position = "bottom")
library(shiny); runApp('ShinyApp/05b_Confidence_Intervals.R')
